<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cimbalino.Toolkit.Core</name>
    </assembly>
    <members>
        <member name="T:Cimbalino.Toolkit.Extensions.ByteArrayExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Byte"/> array instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ToBase64String(System.Byte[])">
            <summary>
            Converts an array of 8-bit unsigned integers to its equivalent <see cref="T:System.String"/> representation encoded with base 64 digits.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <returns>The string representation, in base 64, of the contents of <paramref name="input"/>.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ToString(System.Byte[],System.Text.Encoding)">
            <summary>
            Converts an array of 8-bit unsigned integers to its equivalent <see cref="T:System.String"/> representation, using the specified <see cref="T:System.Text.Encoding"/>.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="encoding">The <see cref="T:System.Text.Encoding"/> to use for encoding the characters.</param>
            <returns>The string representation, of the contents of <paramref name="input"/>.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ComputeSHA1Hash(System.Byte[])">
            <summary>
            Computes the SHA1 hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ComputeSHA1Hash(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the SHA1 hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ComputeSHA256Hash(System.Byte[])">
            <summary>
            Computes the SHA256 hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ComputeSHA256Hash(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the SHA256 hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ComputeMD5Hash(System.Byte[])">
            <summary>
            Computes the MD5 hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ComputeMD5Hash(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the MD5 hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ComputeHMACSHA1Hash(System.Byte[],System.Byte[])">
            <summary>
            Computes the HMACSHA1 hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ComputeHMACSHA1Hash(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the HMACSHA1 hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ComputeHMACSHA256Hash(System.Byte[],System.Byte[])">
            <summary>
            Computes the HMACSHA256 hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ComputeHMACSHA256Hash(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the HMACSHA256 hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ComputeHMACMD5Hash(System.Byte[],System.Byte[])">
            <summary>
            Computes the HMACMD5 hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ByteArrayExtensions.ComputeHMACMD5Hash(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the HMACMD5 hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.DateTimeExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.DateTime"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.DateTimeExtensions.ToUnixTime(System.DateTime)">
            <summary>
            Converts the indicated <see cref="T:System.DateTime"/> instance to the equivalent unix time representation.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime"/> instance.</param>
            <returns>The unix time representation of the <see cref="T:System.DateTime"/> instance.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.DateTimeOffsetExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.DateTimeOffset"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.DateTimeOffsetExtensions.ToUnixTime(System.DateTimeOffset)">
            <summary>
            Converts the indicated <see cref="T:System.DateTimeOffset"/> instance to the equivalent unix time representation.
            </summary>
            <param name="dateTimeOffset">The <see cref="T:System.DateTimeOffset"/> instance.</param>
            <returns>The unix time representation of the <see cref="T:System.DateTimeOffset"/> instance.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.ObjectExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Object"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ObjectExtensions.GetPropertyValue(System.Object,System.String)">
            <summary>
            Searches for the public property with the specified name and gets its value.
            </summary>
            <param name="obj">The object.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>The requested property value.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ObjectExtensions.GetPropertyValue``1(System.Object,System.String)">
            <summary>
            Searches for the public property with the specified name and gets its value.
            </summary>
            <param name="obj">The object.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>The requested property value.</returns>
            <typeparam name="TObject">The object type.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ObjectExtensions.SetPropertyValue``1(System.Object,System.String,``0)">
            <summary>
            Searches for the public property with the specified name and sets its value.
            </summary>
            <param name="obj">The object.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="value">The requested property value to set.</param>
            <typeparam name="TObject">The object type.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ObjectExtensions.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
            Searches for the public method with the specified name and invokes it using the specified parameters.
            </summary>
            <param name="obj">The object.</param>
            <param name="methodName">The name of the method.</param>
            <param name="args">An argument list for the invoked method or constructor.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ObjectExtensions.InvokeMethod``1(System.Object,System.String,System.Object[])">
            <summary>
            Searches for the public method with the specified name and invokes it using the specified parameters, returning the result.
            </summary>
            <param name="obj">The object.</param>
            <param name="methodName">The name of the method.</param>
            <param name="args">An argument list for the invoked method or constructor.</param>
            <returns>The value returned from invoking the method.</returns>
            <typeparam name="TObject">The object type.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ObjectExtensions.AddEventHandler(System.Object,System.String,System.Delegate)">
            <summary>
            Adds an event handler to an event source.
            </summary>
            <param name="obj">The object.</param>
            <param name="target">The event source.</param>
            <param name="handler">Encapsulation of a method or methods to be invoked when the event is raised by the target.</param>
            <returns>Returns a <see cref="T:System.Delegate"/> to the attached event handler.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ObjectExtensions.RemoveEventHandler(System.Object,System.String,System.Delegate)">
            <summary>
            Removes an event handler from an event source.
            </summary>
            <param name="obj">The object.</param>
            <param name="target">The event source.</param>
            <param name="handler">The delegate to be unhooked from the event source.</param>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.StreamExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.IO.Stream"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StreamExtensions.ToArray(System.IO.Stream)">
            <summary>
            Writes the stream contents to a byte array.
            </summary>
            <param name="input">The input stream.</param>
            <returns>A new byte array.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StreamExtensions.ComputeSHA1Hash(System.IO.Stream)">
            <summary>
            Computes the SHA1 hash for the current byte array.
            </summary>
            <param name="input">The input <see cref="T:System.IO.Stream"/> to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StreamExtensions.ComputeSHA256Hash(System.IO.Stream)">
            <summary>
            Computes the SHA256 hash for the current byte array.
            </summary>
            <param name="input">The input <see cref="T:System.IO.Stream"/> to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StreamExtensions.ComputeMD5Hash(System.IO.Stream)">
            <summary>
            Computes the MD5 hash for the current byte array.
            </summary>
            <param name="input">The input <see cref="T:System.IO.Stream"/> to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StreamExtensions.ComputeHMACSHA1Hash(System.IO.Stream,System.Byte[])">
            <summary>
            Computes the HMACSHA1 hash for the current byte array.
            </summary>
            <param name="input">The input <see cref="T:System.IO.Stream"/> to compute the hash code for.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StreamExtensions.ComputeHMACSHA256Hash(System.IO.Stream,System.Byte[])">
            <summary>
            Computes the SHA256 hash for the current byte array.
            </summary>
            <param name="input">The input <see cref="T:System.IO.Stream"/> to compute the hash code for.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StreamExtensions.ToArrayAsync(System.IO.Stream)">
            <summary>
            Writes the stream contents to a byte array.
            </summary>
            <param name="input">The input stream.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.UriBuilderExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.UriBuilder"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.UriBuilderExtensions.SetScheme(System.UriBuilder,System.String)">
            <summary>
            Sets the scheme name of the URI.
            </summary>
            <param name="uriBuilder">The <see cref="T:System.UriBuilder"/> instance.</param>
            <param name="scheme">The scheme name of the uri.</param>
            <returns>The same <see cref="T:System.UriBuilder"/> instance.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.UriBuilderExtensions.SetUserName(System.UriBuilder,System.String)">
            <summary>
            Sets the user name associated with the user that accesses the URI.
            </summary>
            <param name="uriBuilder">The <see cref="T:System.UriBuilder"/> instance.</param>
            <param name="userName">The user name associated with the user that accesses the URI.</param>
            <returns>The same <see cref="T:System.UriBuilder"/> instance.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.UriBuilderExtensions.SetPassword(System.UriBuilder,System.String)">
            <summary>
            Sets the password associated with the user that accesses the URI.
            </summary>
            <param name="uriBuilder">The <see cref="T:System.UriBuilder"/> instance.</param>
            <param name="password">The password associated with the user that accesses the URI.</param>
            <returns>The same <see cref="T:System.UriBuilder"/> instance.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.UriBuilderExtensions.SetHost(System.UriBuilder,System.String)">
            <summary>
            Sets the Domain Name System (DNS) host name or IP address of a server.
            </summary>
            <param name="uriBuilder">The <see cref="T:System.UriBuilder"/> instance.</param>
            <param name="host">The Domain Name System (DNS) host name or IP address of a server.</param>
            <returns>The same <see cref="T:System.UriBuilder"/> instance.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.UriBuilderExtensions.SetPort(System.UriBuilder,System.Int32)">
            <summary>
            Sets the port number of the URI.
            </summary>
            <param name="uriBuilder">The <see cref="T:System.UriBuilder"/> instance.</param>
            <param name="port">The port number of the URI.</param>
            <returns>The same <see cref="T:System.UriBuilder"/> instance.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.UriBuilderExtensions.SetPath(System.UriBuilder,System.String)">
            <summary>
            Sets the path to the resource referenced by the URI.
            </summary>
            <param name="uriBuilder">The <see cref="T:System.UriBuilder"/> instance.</param>
            <param name="path">The path to the resource referenced by the URI.</param>
            <returns>The same <see cref="T:System.UriBuilder"/> instance.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.UriBuilderExtensions.SetPath(System.UriBuilder,System.String,System.Object[])">
            <summary>
            Sets the path to the resource referenced by the URI.
            </summary>
            <param name="uriBuilder">The <see cref="T:System.UriBuilder"/> instance.</param>
            <param name="path">The path to the resource referenced by the URI, as a composite format string.</param>
            <param name="parameters">An object array that contains zero or more objects to format.</param>
            <returns>The same <see cref="T:System.UriBuilder"/> instance.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.UriBuilderExtensions.SetFragment(System.UriBuilder,System.String)">
            <summary>
            Sets the fragment portion of the URI.
            </summary>
            <param name="uriBuilder">The <see cref="T:System.UriBuilder"/> instance.</param>
            <param name="fragment">The fragment portion of the URI.</param>
            <returns>The same <see cref="T:System.UriBuilder"/> instance.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.UriBuilderExtensions.SetQuery(System.UriBuilder,System.String)">
            <summary>
            Sets any query information included in the URI.
            </summary>
            <param name="uriBuilder">The <see cref="T:System.UriBuilder"/> instance.</param>
            <param name="query">The query information included in the URI.</param>
            <returns>The same <see cref="T:System.UriBuilder"/> instance.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.UriBuilderExtensions.AppendQueryParameter(System.UriBuilder,System.String,System.String)">
            <summary>
            Appends a key value pair to the current query information included in the URI.
            </summary>
            <param name="uriBuilder">The <see cref="T:System.UriBuilder"/> instance.</param>
            <param name="key">The key to add to the current query information included in the URI.</param>
            <param name="value">The value to add to the current query information included in the URI.</param>
            <returns>The same <see cref="T:System.UriBuilder"/> instance.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.UriBuilderExtensions.AppendQueryParameterIfValueNotEmpty(System.UriBuilder,System.String,System.String)">
            <summary>
            Appends a key value pair to the current query information included in the URI, if the value is not null or empty.
            </summary>
            <param name="uriBuilder">The <see cref="T:System.UriBuilder"/> instance.</param>
            <param name="key">The key to add to the current query information included in the URI.</param>
            <param name="value">The value to add to the current query information included in the URI.</param>
            <returns>The same <see cref="T:System.UriBuilder"/> instance.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.UriBuilderExtensions.Build(System.UriBuilder)">
            <summary>
            Gets the <see cref="T:System.Uri"/> instance constructed by the specified <see cref="T:System.UriBuilder"/> instance.
            </summary>
            <param name="uriBuilder">The <see cref="T:System.UriBuilder"/> instance.</param>
            <returns>The <see cref="T:System.Uri"/> instance constructed by the specified <see cref="T:System.UriBuilder"/> instance.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Foundation.Point">
            <summary>
            Represents an x- and y-coordinate pair in two-dimensional space.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Foundation.Point.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Foundation.Point"/> structure that has the specified x-coordinate and y-coordinate.
            </summary>
            <param name="x">The x-coordinate of the new <see cref="T:Cimbalino.Toolkit.Foundation.Point"/> structure.</param>
            <param name="y">The y-coordinate of the new <see cref="T:Cimbalino.Toolkit.Foundation.Point"/> structure.</param>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Point.X">
            <summary>
            Gets or sets the X-coordinate value of this <see cref="T:Cimbalino.Toolkit.Foundation.Point"/> structure.
            </summary>
            <value>The X-coordinate value of this <see cref="T:Cimbalino.Toolkit.Foundation.Point"/> structure.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Point.Y">
            <summary>
            Gets or sets the Y-coordinate value of this <see cref="T:Cimbalino.Toolkit.Foundation.Point"/> structure.
            </summary>
            <value>The Y-coordinate value of this <see cref="T:Cimbalino.Toolkit.Foundation.Point"/> structure.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Foundation.Size">
            <summary>
            Implements a structure that is used to describe the <see cref="T:Cimbalino.Toolkit.Foundation.Size"/> of an object.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Foundation.Size.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Foundation.Size"/> structure and assigns it an initial <paramref name="width"/> and <paramref name="height"/>.
            </summary>
            <param name="width">The initial width of the instance of <see cref="T:Cimbalino.Toolkit.Foundation.Size"/>.</param>
            <param name="height">The initial height of the instance of <see cref="T:Cimbalino.Toolkit.Foundation.Size"/>.</param>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Size.Width">
            <summary>
            Gets or sets the width of this <see cref="T:Cimbalino.Toolkit.Foundation.Size"/> structure.
            </summary>
            <value>The width of this <see cref="T:Cimbalino.Toolkit.Foundation.Size"/> structure. The default is 0.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Size.Height">
            <summary>
            Gets or sets the height of this <see cref="T:Cimbalino.Toolkit.Foundation.Size"/> structure.
            </summary>
            <value>The height of this <see cref="T:Cimbalino.Toolkit.Foundation.Size"/> structure. The default is 0.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Size.IsEmpty">
            <summary>
            Gets a value indicating whether this instance of <see cref="T:Cimbalino.Toolkit.Foundation.Size"/> is <see cref="P:Cimbalino.Toolkit.Foundation.Size.Empty"/>.
            </summary>
            <value>true if this instance of <see cref="T:Cimbalino.Toolkit.Foundation.Size"/> is <see cref="P:Cimbalino.Toolkit.Foundation.Size.Empty"/>; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Size.Empty">
            <summary>
            Gets a value that represents a static empty <see cref="T:Cimbalino.Toolkit.Foundation.Size"/>.
            </summary>
            <value>The static empty <see cref="T:Cimbalino.Toolkit.Foundation.Size"/>.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ApplicationManifest">
            <summary>
            Represents the contents of the application manifest.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifest.Current">
            <summary>
            Gets the current <see cref="T:Cimbalino.Toolkit.Helpers.ApplicationManifest"/> instance.
            </summary>
            <value>The current <see cref="T:Cimbalino.Toolkit.Helpers.ApplicationManifest"/> instance.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifest.AppPlatformVersion">
            <summary>
            Gets or sets the version of the Windows Phone SDK or the runtime binaries of the platform. The default value is 8.0 for Windows Phone 8 and 7.1 for Windows Phone OS 7.1.
            </summary>
            <value>The version of the Windows Phone SDK or the runtime binaries of the platform.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifest.DefaultLanguage">
            <summary>
            Gets or sets the application default language.
            </summary>
            <value>The application default language.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifest.AppExtras">
            <summary>
            Gets or sets the application extra elements.
            </summary>
            <value>The application extra elements.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifest.Languages">
            <summary>
            Gets or sets the application supported languages.
            </summary>
            <value>The application supported languages.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifest.App">
            <summary>
            Gets or sets the app detailed information.
            </summary>
            <value>The app detailed information.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode">
            <summary>
            Represents the app detailed information in the application manifest.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.Author">
            <summary>
            Gets or sets the app author’s name.
            </summary>
            <value>The app author’s name.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.BitsPerPixel">
            <summary>
            Gets or sets the bits per pixel of the app. 16 or 32 bits per pixel.
            </summary>
            <value>The bits per pixel of the app.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.Description">
            <summary>
            Gets or sets the description of the app.
            </summary>
            <value>The description of the app.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.Genre">
            <summary>
            Gets or sets the app genre. The default value is either Apps.Normal or Apps.Game depending on the project type.
            </summary>
            <value>The app genre.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.HasSettings">
            <summary>
            Gets or sets a value indicating whether the app supports settings.
            </summary>
            <value>true if the app supports settings; otherwise false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.HubType">
            <summary>
            Gets or sets the hub type of the app. Enables your app to appear in the Extras section of the Music + Videos Hub. It is used for testing before app submission, and must be manually entered in the manifest file. A value of 1 enables this functionality.
            </summary>
            <value>The hub type of the app.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.IsBeta">
            <summary>
            Gets or sets a value indicating whether the app is a beta app. This has consequences for the app license.
            </summary>
            <value>true if the app is a beta app; otherwise false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.ProductId">
            <summary>
            Gets or sets the app product id. The default value is the GUID for the project (128 bit). During the app submission process, a new product ID is inserted into the manifest file.
            </summary>
            <value>The app product id.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.Publisher">
            <summary>
            Gets or sets the publisher of the app. This default value is the name of the project. This attribute is required for certain types of apps, such as push-enabled apps.
            </summary>
            <value>The publisher of the app.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.PublisherId">
            <summary>
            Gets or sets the publisher id of the app. The default value is the GUID for the project (128 bit). During the app submission process, a new product ID is inserted into the manifest file.
            </summary>
            <value>The publisher id of the app.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.Title">
            <summary>
            Gets or sets the title of the app that appears in the app list or Games Hub. The default value is the name of the project.
            </summary>
            <value>The title of the app that appears in the app list or Games Hub.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.Version">
            <summary>
            Gets or sets the app version. The default value is 1.0.0.0.
            </summary>
            <value>The app version.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.IconPath">
            <summary>
            Gets or sets the location of the app icon that is visible in the app list. The attributes are for internal use only.
            </summary>
            <value>The location of the app icon that is visible in the app list.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.Capabilities">
            <summary>
            Gets or sets the software capability requirements of the app.
            </summary>
            <value>The software capabilities requirements of the app.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.ScreenResolutions">
            <summary>
            Gets or sets the resolutions that the app supports.
            </summary>
            <value>The resolutions that the app supports.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.Requirements">
            <summary>
            Gets or sets the hardware requirements of the app.
            </summary>
            <value>The hardware requirements of the app.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.Tasks">
            <summary>
            Gets or sets the tasks of the app.
            </summary>
            <value>The tasks of the app.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestAppNode.Tokens">
            <summary>
            Gets or sets the tokens of the app.
            </summary>
            <value>The tokens of the app.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ApplicationManifestBackgroundServiceAgentNode">
            <summary>
            Represents a background service agent in the application manifest.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestBackgroundServiceAgentNode.Specifier">
            <summary>
            Gets or sets the background service agent specifier.
            </summary>
            <value>The background service agent specifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestBackgroundServiceAgentNode.Name">
            <summary>
            Gets or sets the background service agent name.
            </summary>
            <value>The background service agent name.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestBackgroundServiceAgentNode.Source">
            <summary>
            Gets or sets the background service agent source.
            </summary>
            <value>The background service agent source.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestBackgroundServiceAgentNode.Type">
            <summary>
            Gets or sets the background service agent type.
            </summary>
            <value>The background service agent type.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ApplicationManifestDefaultTaskNode">
            <summary>
            Represents a default task in the application manifest.
            </summary>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ApplicationManifestTaskNodeBase">
            <summary>
            Represents a task in the application manifest.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestTaskNodeBase.Name">
            <summary>
            Gets or sets the name of the task.
            </summary>
            <value>The name of the task.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestDefaultTaskNode.NavigationPage">
            <summary>
            Gets or sets the page to navigate.
            </summary>
            <value>The page to navigate.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ApplicationManifestExtendedTaskNode">
            <summary>
            Represents an extended task in the application manifest.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestExtendedTaskNode.BackgroundServiceAgents">
            <summary>
            Gets or sets the list of background service agents.
            </summary>
            <value>The list of background service agents.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ApplicationManifestIconPathNode">
            <summary>
            Represents the location of the app icon that is visible in the app list.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestIconPathNode.IsRelative">
            <summary>
            Gets or sets a value indicating whether the icon location is relative.
            </summary>
            <value>true if the icon location is relative; otherwise false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestIconPathNode.IsResource">
            <summary>
            Gets or sets a value indicating whether the icon is a resource.
            </summary>
            <value>true if the icon is a resource; otherwise false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestIconPathNode.Value">
            <summary>
            Gets or sets the icon location.
            </summary>
            <value>The icon location.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ApplicationManifestLanguageNode">
            <summary>
            Represents a language in the application manifest.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestLanguageNode.Code">
            <summary>
            Gets or sets the language code.
            </summary>
            <value>The language code.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ApplicationManifestNamedNode">
            <summary>
            Represents a named node in the application manifest.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestNamedNode.Name">
            <summary>
            Gets or sets the Name attribute value.
            </summary>
            <value>The Name attribute value.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ApplicationManifestTokenNode">
            <summary>
            Represents a token in the application manifest.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestTokenNode.TokenId">
            <summary>
            Gets or sets the token id.
            </summary>
            <value>The token id.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ApplicationManifestTokenNode.TaskName">
            <summary>
            Gets or sets the token task name.
            </summary>
            <value>The token task name.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ObservableBase">
            <summary>
            Base helper class that will notify any listener for task completion.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ObservableBase.SetProperty``1(``0@,``0,System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Assigns a new value to a property and raises the <see cref="E:Cimbalino.Toolkit.Helpers.ObservableBase.PropertyChanged"/> event if the value changed.
            </summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="field">The field storing the property's value.</param>
            <param name="value">The property's new value.</param>
            <param name="propertyExpression">An expression identifying the property that changed.</param>
            <returns>true if the property value changed; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ObservableBase.SetProperty``1(``0@,``0,System.String)">
            <summary>
            Assigns a new value to a property and raises the <see cref="E:Cimbalino.Toolkit.Helpers.ObservableBase.PropertyChanged"/> event if the value changed.
            </summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="field">The field storing the property's value.</param>
            <param name="value">The property's new value.</param>
            <param name="propertyName">The property name.</param>
            <returns>true if the property value changed; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ObservableBase.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the <see cref="E:Cimbalino.Toolkit.Helpers.ObservableBase.PropertyChanged"/> event.
            </summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="propertyExpression">An expression identifying the property that changed.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ObservableBase.RaisePropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Cimbalino.Toolkit.Helpers.ObservableBase.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ObservableBase.GetPropertyName``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Extracts the name of a property from an expression.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="propertyExpression">An expression identifying the property.</param>
            <returns>The name of a property from an expression.</returns>
        </member>
        <member name="E:Cimbalino.Toolkit.Helpers.ObservableBase.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ObservableTask">
            <summary>
            Helper class that will notify any listener for task completion.
            </summary>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ObservableTaskBase`1">
            <summary>
            A basic implementation of <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
            <typeparam name="T">The associated task instance type.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ObservableTaskBase`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.ObservableTaskBase`1"/> class.
            </summary>
            <param name="task">The associated task instance.</param>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ObservableTaskBase`1.Task">
            <summary>
            Gets the associated task instance.
            </summary>
            <value>The associated task instance.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ObservableTaskBase`1.IsCompleted">
            <summary>
            Gets a value indicating whether the associated task instance has completed.
            </summary>
            <value>true if the associated task instance has completed; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ObservableTaskBase`1.IsCancelled">
            <summary>
            Gets a value indicating whether the associated task instance has completed execution due to being canceled.
            </summary>
            <value>true if the associated task instance has completed execution due to being canceled; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ObservableTaskBase`1.IsFaulted">
            <summary>
            Gets a value indicating whether the associated task instance has completed execution due to an unhandled exception.
            </summary>
            <value>true if the associated task instance has completed execution due to an unhandled exception; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ObservableTaskBase`1.Exception">
            <summary>
            Gets the <see cref="T:System.AggregateException"/> that caused the associated task instance to end prematurely.
            </summary>
            <value>The <see cref="T:System.AggregateException"/> that caused the associated task instance to end prematurely.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ObservableTaskBase`1.Status">
            <summary>
            Gets the <see cref="T:System.Threading.Tasks.TaskStatus"/> of the associated task instance.
            </summary>
            <value>The <see cref="T:System.Threading.Tasks.TaskStatus"/> of the associated task instance.</value>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ObservableTask.#ctor(System.Threading.Tasks.Task)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.ObservableTask"/> class.
            </summary>
            <param name="task">The associated task instance.</param>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ObservableTask`1">
            <summary>
            Helper class that will notify any listener for task completion.
            </summary>
            <typeparam name="T">The type of the result produced by the associated task instance.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ObservableTask`1.#ctor(System.Threading.Tasks.Task{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.ObservableTask`1"/> class.
            </summary>
            <param name="task">The associated task instance.</param>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.WeakAction">
            <summary>
            Stores an <see cref="T:System.Action"/> without causing a hard reference to be created to the action's owner. The owner can be garbage collected at any time.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakAction"/> class.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakAction.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakAction"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakAction.#ctor(System.Object,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakAction"/> class.
            </summary>
            <param name="target">The action's owner.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakAction.Execute">
            <summary>
            Executes the action if action's owner is still alive.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakAction.Dispose">
            <summary>
            Disposes this instance and releases all references.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakAction.ActionReference">
            <summary>
            Gets or sets a <see cref="T:System.WeakReference"/> to the target <see cref="T:System.Action"/>.
            </summary>
            <value>A <see cref="T:System.WeakReference"/> to the target <see cref="T:System.Action"/>.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakAction.Reference">
            <summary>
            Gets or sets a <see cref="T:System.WeakReference"/> to the target of this <see cref="T:Cimbalino.Toolkit.Helpers.WeakAction"/>.
            </summary>
            <value>A <see cref="T:System.WeakReference"/> to the target of this <see cref="T:Cimbalino.Toolkit.Helpers.WeakAction"/>.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakAction.Method">
            <summary>
            Gets or sets the <see cref="T:System.Reflection.MethodInfo"/> corresponding to this <see cref="T:Cimbalino.Toolkit.Helpers.WeakAction"/>.
            </summary>
            <value>The <see cref="T:System.Reflection.MethodInfo"/> corresponding to this <see cref="T:Cimbalino.Toolkit.Helpers.WeakAction"/>.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakAction.IsAlive">
            <summary>
            Gets a value indicating whether the action's owner is still alive (not yet collected by the Garbage Collector).
            </summary>
            <value>true if action's owner is still alive; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.WeakAction`1">
            <summary>
            Stores an <see cref="T:System.Action`1"/> without causing a hard reference to be created to the action's owner. The owner can be garbage collected at any time.
            </summary>
            <typeparam name="T">The type of the parameter of the method that this delegate encapsulates.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakAction`1.#ctor(System.Action{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakAction`1"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakAction`1.#ctor(System.Object,System.Action{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakAction`1"/> class.
            </summary>
            <param name="target">The action's owner.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakAction`1.Execute">
            <summary>
            Executes the action if action's owner is still alive.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakAction`1.Execute(`0)">
            <summary>
            Executes the action if action's owner is still alive.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakAction`1.IsAlive">
            <summary>
            Gets a value indicating whether the action's owner is still alive (not yet collected by the Garbage Collector).
            </summary>
            <value>true if action's owner is still alive; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription">
            <summary>
            Stores an <see cref="T:System.EventHandler"/> without causing a hard reference to be created to the event handler's owner. The owner can be garbage collected at any time.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakEventSubscription.#ctor(System.EventHandler,System.Action{System.EventHandler},System.Action{System.EventHandler})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription"/> class.
            </summary>
            <param name="eventHandler">The event handler.</param>
            <param name="subscribeAction">The action to subscribe the event handler.</param>
            <param name="unsubscribeAction">The action to unsubscribe the event handler.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakEventSubscription.#ctor(System.Object,System.EventHandler,System.Action{System.EventHandler},System.Action{System.EventHandler})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription"/> class.
            </summary>
            <param name="target">The event handler's owner.</param>
            <param name="eventHandler">The event handler.</param>
            <param name="subscribeAction">The action to subscribe the event handler.</param>
            <param name="unsubscribeAction">The action to unsubscribe the event handler.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakEventSubscription.Dispose">
            <summary>
            Disposes this instance and releases all references.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakEventSubscription.EventHandlerReference">
            <summary>
            Gets or sets a <see cref="T:System.WeakReference"/> to the target <see cref="T:System.EventHandler"/>.
            </summary>
            <value>A <see cref="T:System.WeakReference"/> to the target <see cref="T:System.EventHandler"/>.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakEventSubscription.Reference">
            <summary>
            Gets or sets a <see cref="T:System.WeakReference"/> to the target of this <see cref="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription"/>.
            </summary>
            <value>A <see cref="T:System.WeakReference"/> to the target of this <see cref="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription"/>.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakEventSubscription.Method">
            <summary>
            Gets or sets the <see cref="T:System.Reflection.MethodInfo"/> corresponding to this <see cref="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription"/>.
            </summary>
            <value>The <see cref="T:System.Reflection.MethodInfo"/> corresponding to this <see cref="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription"/>.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakEventSubscription.IsAlive">
            <summary>
            Gets a value indicating whether the event handler's owner is still alive (not yet collected by the Garbage Collector).
            </summary>
            <value>true if event handler's owner is still alive; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1">
            <summary>
            Stores an <see cref="T:System.EventHandler`1"/> without causing a hard reference to be created to the event handler's owner. The owner can be garbage collected at any time.
            </summary>
            <typeparam name="T">The type of the event data generated by the event.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1.#ctor(System.EventHandler{`0},System.Action{System.EventHandler{`0}},System.Action{System.EventHandler{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1"/> class.
            </summary>
            <param name="eventHandler">The event handler.</param>
            <param name="subscribeAction">The action to subscribe the event handler.</param>
            <param name="unsubscribeAction">The action to unsubscribe the event handler.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1.#ctor(System.Object,System.EventHandler{`0},System.Action{System.EventHandler{`0}},System.Action{System.EventHandler{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1"/> class.
            </summary>
            <param name="target">The event handler's owner.</param>
            <param name="eventHandler">The event handler.</param>
            <param name="subscribeAction">The action to subscribe the event handler.</param>
            <param name="unsubscribeAction">The action to unsubscribe the event handler.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1.Dispose">
            <summary>
            Disposes this instance and releases all references.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1.EventHandlerReference">
            <summary>
            Gets or sets a <see cref="T:System.WeakReference"/> to the target <see cref="T:System.EventHandler`1"/>.
            </summary>
            <value>A <see cref="T:System.WeakReference"/> to the target <see cref="T:System.EventHandler`1"/>.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1.Reference">
            <summary>
            Gets or sets a <see cref="T:System.WeakReference"/> to the target of this <see cref="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1"/>.
            </summary>
            <value>A <see cref="T:System.WeakReference"/> to the target of this <see cref="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1"/>.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1.Method">
            <summary>
            Gets or sets the <see cref="T:System.Reflection.MethodInfo"/> corresponding to this <see cref="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1"/>.
            </summary>
            <value>The <see cref="T:System.Reflection.MethodInfo"/> corresponding to this <see cref="T:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1"/>.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakEventSubscription`1.IsAlive">
            <summary>
            Gets a value indicating whether the event handler's owner is still alive (not yet collected by the Garbage Collector).
            </summary>
            <value>true if event handler's owner is still alive; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.WeakFunc`2">
            <summary>
            Stores an <see cref="T:System.Func`2"/> without causing a hard reference to be created to the function's owner. The owner can be garbage collected at any time.
            </summary>
            <typeparam name="T">The type of the parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.WeakFunc`1">
            <summary>
            Stores an <see cref="T:System.Func`1"/> without causing a hard reference to be created to the function's owner. The owner can be garbage collected at any time.
            </summary>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakFunc`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakFunc`1"/> class.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakFunc`1.#ctor(System.Func{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakFunc`1"/> class.
            </summary>
            <param name="func">The function.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakFunc`1.#ctor(System.Object,System.Func{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakFunc`1"/> class.
            </summary>
            <param name="target">The function's owner.</param>
            <param name="func">The function.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakFunc`1.Execute">
            <summary>
            Executes the function if function's owner is still alive.
            </summary>
            <returns>The return value from executing the function if the function's owner is still alive.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakFunc`1.Dispose">
            <summary>
            Disposes this instance and releases all references.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakFunc`1.FuncReference">
            <summary>
            Gets or sets a <see cref="T:System.WeakReference"/> to the target <see cref="T:System.Func`1"/>.
            </summary>
            <value>A <see cref="T:System.WeakReference"/> to the target <see cref="T:System.Func`1"/>.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakFunc`1.Reference">
            <summary>
            Gets or sets a <see cref="T:System.WeakReference"/> to the target of this <see cref="T:Cimbalino.Toolkit.Helpers.WeakFunc`1"/>.
            </summary>
            <value>A <see cref="T:System.WeakReference"/> to the target of this <see cref="T:Cimbalino.Toolkit.Helpers.WeakFunc`1"/>.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakFunc`1.Method">
            <summary>
            Gets or sets the <see cref="T:System.Reflection.MethodInfo"/> corresponding to this <see cref="T:Cimbalino.Toolkit.Helpers.WeakFunc`1"/>.
            </summary>
            <value>The <see cref="T:System.Reflection.MethodInfo"/> corresponding to this <see cref="T:Cimbalino.Toolkit.Helpers.WeakFunc`1"/>.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakFunc`1.IsAlive">
            <summary>
            Gets a value indicating whether the function's owner is still alive (not yet collected by the Garbage Collector).
            </summary>
            <value>true if function's owner is still alive; otherwise, false.</value>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakFunc`2.#ctor(System.Func{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakFunc`2"/> class.
            </summary>
            <param name="func">The function.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakFunc`2.#ctor(System.Object,System.Func{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.WeakFunc`2"/> class.
            </summary>
            <param name="target">The function's owner.</param>
            <param name="func">The function.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakFunc`2.Execute">
            <summary>
            Executes the function if function's owner is still alive.
            </summary>
            <returns>The return value from executing the function if the function's owner is still alive.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.WeakFunc`2.Execute(`0)">
            <summary>
            Executes the function if function's owner is still alive.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>The return value from executing the function if the function's owner is still alive.</returns>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.WeakFunc`2.IsAlive">
            <summary>
            Gets a value indicating whether the function's owner is still alive (not yet collected by the Garbage Collector).
            </summary>
            <value>true if function's owner is still alive; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.ApplicationProfileServiceMode">
            <summary>
            Describes the application profile mode.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.ApplicationProfileServiceMode.Unknown">
            <summary>
            The application is running in an unknown mode.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.ApplicationProfileServiceMode.Default">
            <summary>
            The application is running in default mode.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.ApplicationProfileServiceMode.KidsCorner">
            <summary>
            The application is running under kids corner.
            </summary>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.DeviceStatusServicePowerSource">
            <summary>
            Indicates whether the device is currently running on battery power or is plugged in to an external power supply.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.DeviceStatusServicePowerSource.Battery">
            <summary>
            The device is running on battery power.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.DeviceStatusServicePowerSource.External">
            <summary>
            The device is plugged in to an external power source, such as being docked to a computer or connected to a power supply.
            </summary>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IApplicationManifestService">
            <summary>
            Represents a service capable of reading from the application manifest.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IApplicationManifestService.GetApplicationManifest">
            <summary>
            Gets the application manifest for the active app.
            </summary>
            <returns>The application manifest for the active app.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IApplicationProfileService">
            <summary>
            Represents a service capable of providing profile information about an app.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IApplicationProfileService.Mode">
            <summary>
            Gets a value that indicates the mode that an app is running in.
            </summary>
            <value>A value that indicates the mode that an app is running in.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IApplicationSettingsService">
            <summary>
            Represents a service capable of handling the application settings.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IApplicationSettingsService.Local">
            <summary>
            Gets the local settings handler instance for the app.
            </summary>
            <value>The local settings handler instance for the app.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IApplicationSettingsService.Roaming">
            <summary>
            Gets the roaming settings handler instance for the app.
            </summary>
            <value>The roaming settings handler instance for the app.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IApplicationSettingsService.Legacy">
            <summary>
            Gets the legacy settings handler instance for the app.
            </summary>
            <value>The legacy settings handler instance for the app.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IApplicationSettingsServiceHandler">
            <summary>
            Represents a service capable of handling the application settings.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IApplicationSettingsServiceHandler.Contains(System.String)">
            <summary>
            Determines if the application settings contains the specified key.
            </summary>
            <param name="key">The key for the entry to be located.</param>
            <returns>true if the settings contains the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IApplicationSettingsServiceHandler.Get``1(System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <returns>The value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter.</returns>
            <typeparam name="T">The type of value to get.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IApplicationSettingsServiceHandler.Get``1(System.String,``0)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="defaultValue">The default value to return if the key does not exist.</param>
            <returns>The value associated with the specified key, if the key is found; otherwise, the specified default value.</returns>
            <typeparam name="T">The type of value to get.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IApplicationSettingsServiceHandler.Set``1(System.String,``0)">
            <summary>
            Sets the value for the specified key. If the entry does not exist, a new one will be added.
            </summary>
            <param name="key">The key whose value to set.</param>
            <param name="value">The value for the specified key.</param>
            <typeparam name="T">The type of value to set.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IApplicationSettingsServiceHandler.Remove(System.String)">
            <summary>
            Removes the specified key and associated value.
            </summary>
            <param name="key">The key whose value to clear.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IApplicationSettingsServiceHandler.GetValuesAsync">
            <summary>
            Gets an object that represents all the settings in this <see cref="T:Cimbalino.Toolkit.Services.IApplicationSettingsServiceHandler"/> instance.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IDeviceStatusService">
            <summary>
            Represents a service capable of obtaining information about the device on which it is running.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDeviceStatusService.ApplicationCurrentMemoryUsage">
            <summary>
            Gets the memory usage of the current application in bytes.
            </summary>
            <value>The memory usage of the current application in bytes.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDeviceStatusService.ApplicationMemoryUsageLimit">
            <summary>
            Gets the maximum amount of memory that your application process can allocate.
            </summary>
            <value>The maximum amount of memory that your application process can allocate.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDeviceStatusService.ApplicationPeakMemoryUsage">
            <summary>
            Gets the peak memory usage of the current application in bytes.
            </summary>
            <value>The peak memory usage of the current application in bytes.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDeviceStatusService.DeviceFirmwareVersion">
            <summary>
            Gets the firmware version running on the device.
            </summary>
            <value>The firmware version running on the device.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDeviceStatusService.DeviceHardwareVersion">
            <summary>
            Gets the hardware version running on the device.
            </summary>
            <value>The hardware version running on the device.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDeviceStatusService.DeviceManufacturer">
            <summary>
            Gets the device manufacturer name.
            </summary>
            <value>The device manufacturer name.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDeviceStatusService.DeviceName">
            <summary>
            Gets the device name.
            </summary>
            <value>The device name.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDeviceStatusService.DeviceTotalMemory">
            <summary>
            Gets the physical RAM size of the device in bytes.
            </summary>
            <value>The physical RAM size of the device in bytes.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDeviceStatusService.IsLowMemoryDevice">
            <summary>
            Gets a value indicating whether the device is a low memory device (less than 256 MB of memory installed).
            </summary>
            <value>true if the device is a low memory device (less than 256 MB of memory installed); otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDeviceStatusService.IsKeyboardDeployed">
            <summary>
            Gets a value indicating whether the user has deployed the physical hardware keyboard of the device.
            </summary>
            <value>true if the keyboard is deployed; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDeviceStatusService.IsKeyboardPresent">
            <summary>
            Gets a value indicating whether the device contains a physical hardware keyboard.
            </summary>
            <value>true if the device contains a physical hardware keyboard; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDeviceStatusService.PowerSource">
            <summary>
            Gets the a value indicating whether the device is currently running on battery power or is plugged in to an external power supply.
            </summary>
            <value>true if the device is currently running on battery power or is plugged in to an external power supply; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IMapManagerService">
            <summary>
            Represents a service capable of displaying the UI that lets users download maps for offline use, or update maps that were previously downloaded.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IMapManagerService.ShowDownloadedMapsUI">
            <summary>
            Displays the UI that lets users download maps for offline use.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IMapManagerService.ShowMapsUpdateUI">
            <summary>
            Displays the UI that lets users update maps that were previously downloaded for offline use.
            </summary>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.INetworkInformationService">
            <summary>
            Represents a service capable of providing network information for a specific device.
            </summary>
        </member>
        <member name="E:Cimbalino.Toolkit.Services.INetworkInformationService.NetworkStatusChanged">
            <summary>
            Occurs when the network status changes for a connection.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.INetworkInformationService.IsNetworkAvailable">
            <summary>
            Gets a value indicating whether the network is available.
            </summary>
            <value>true if the network is available; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IRuntimeInformationService">
            <summary>
            Represents a service capable of providing runtime information for a specific device.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IRuntimeInformationService.Profile">
            <summary>
            Gets the device runtime profile.
            </summary>
            <value>The device runtime profile.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IRuntimeInformationService.Version">
            <summary>
            Gets the device runtime version.
            </summary>
            <value>The device runtime version.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IStorageServiceHandler">
            <summary>
            Represents a service capable of handling the application storage asynchronously.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.CopyFileAsync(System.String,System.String)">
            <summary>
            Copies an existing file to a new file.
            </summary>
            <param name="sourceFileName">The name of the file to copy.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory or an existing file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.CopyFileAsync(System.String,System.String,System.Boolean)">
            <summary>
            Copies an existing file to a new file, and optionally overwrites an existing file.
            </summary>
            <param name="sourceFileName">The name of the file to copy.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory.</param>
            <param name="overwrite">true if the destination file can be overwritten; otherwise, false.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.MoveFileAsync(System.String,System.String)">
            <summary>
            Moves an existing file to a new file.
            </summary>
            <param name="sourceFileName">The name of the file to move.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory or an existing file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.MoveFileAsync(System.String,System.String,System.Boolean)">
            <summary>
            Moves an existing file to a new file, and optionally overwrites an existing file.
            </summary>
            <param name="sourceFileName">The name of the file to move.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory.</param>
            <param name="overwrite">true if the destination file can be overwritten; otherwise, false.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.CreateDirectoryAsync(System.String)">
            <summary>
            Creates a directory in the storage scope.
            </summary>
            <param name="dir">The relative path of the directory to create within the storage.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.CreateFileAsync(System.String)">
            <summary>
            Creates a file in the store.
            </summary>
            <param name="path">The relative path of the file to be created in the store.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.DeleteDirectoryAsync(System.String)">
            <summary>
            Deletes a directory in the storage scope.
            </summary>
            <param name="dir">The relative path of the directory to delete within the storage scope.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.DeleteFileAsync(System.String)">
            <summary>
            Deletes the specified file.
            </summary>
            <param name="path">The name of the file to be deleted. Wildcard characters are not supported.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.DirectoryExistsAsync(System.String)">
            <summary>
            Determines whether the specified path refers to an existing directory in the store.
            </summary>
            <param name="dir">The path to test.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.FileExistsAsync(System.String)">
            <summary>
            Determines whether the specified path refers to an existing file in the store.
            </summary>
            <param name="path">The path and file name to test.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.GetDirectoryNamesAsync">
            <summary>
            Enumerates the directories in the root of a store.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.GetDirectoryNamesAsync(System.String)">
            <summary>
            Enumerates directories in a storage scope that match a given pattern.
            </summary>
            <param name="searchPattern">A search pattern. Both single-character ("?") and multi-character ("*") wildcards are supported.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.GetFileNamesAsync">
            <summary>
            Obtains the names of files in the root of a store.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.GetFileNamesAsync(System.String)">
            <summary>
            Enumerates files in storage scope that match a given pattern.
            </summary>
            <param name="searchPattern">A search pattern. Both single-character ("?") and multi-character ("*") wildcards are supported.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.OpenFileForReadAsync(System.String)">
            <summary>
            Opens a file in the specified mode.
            </summary>
            <param name="path">The relative path of the file within the store.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.ReadAllTextAsync(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.ReadAllTextAsync(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.ReadAllLinesAsync(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.ReadAllLinesAsync(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.ReadAllBytesAsync(System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file. Returns null, if an exception is raised.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.WriteAllTextAsync(System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.WriteAllTextAsync(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <param name="encoding">The encoding to apply to the string.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new file, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.WriteAllBytesAsync(System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="bytes">The bytes to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.AppendAllText(System.String,System.String)">
            <summary>
            Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Appends the specified string to the file, creating the file if it does not already exist.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends lines to a file, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStorageServiceHandler.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Appends lines to a file by using a specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IStatusBarService">
            <summary>
            Represents a service capable of handling the application status bar.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStatusBarService.ShowAsync(System.String)">
            <summary>
            Shows the status bar with the specified text.
            </summary>
            <param name="text">The text to display in the status bar.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStatusBarService.ShowAsync(System.String,System.Boolean)">
            <summary>
            Shows the status bar with the specified text and an optional indeterminate progress indicator.
            </summary>
            <param name="text">The text to display in the status bar.</param>
            <param name="isIndeterminate">true if the progress indicator is indeterminate; otherwise, false.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStatusBarService.ShowAsync(System.String,System.Double)">
            <summary>
            Shows the status bar with the specified text and progress value.
            </summary>
            <param name="text">The text to display in the status bar.</param>
            <param name="value">The progress indicator value.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStatusBarService.HideAsync">
            <summary>
            Hides the status bar.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IVibrationService">
            <summary>
            Represents a service capable of using device vibration capabilities.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IVibrationService.Vibrate">
            <summary>
            Vibrates the device for 200 milliseconds.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IVibrationService.Vibrate(System.Double)">
            <summary>
            Vibrates the device for the specified duration (from 0 to 5000 milliseconds).
            </summary>
            <param name="duration">The duration (from 0 to 5000 milliseconds) for which the device vibrates.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IVibrationService.Vibrate(System.TimeSpan)">
            <summary>
            Vibrates the device for the specified duration (from 0 to 5000 milliseconds).
            </summary>
            <param name="duration">The duration (from 0 to 5000 milliseconds) for which the device vibrates.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IVibrationService.Cancel">
            <summary>
            Stops the vibration of the device.
            </summary>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IWindowsPhoneStoreService">
            <summary>
            Represents a service capable of retrieving Windows Phone Store information about an application.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IWindowsPhoneStoreService.GetAppInformationAsync">
            <summary>
            Retrieves store information about the running application.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IWindowsPhoneStoreService.GetAppInformationAsync(System.String)">
            <summary>
            Retrieves store information about the running application.
            </summary>
            <param name="productId">The application Product ID.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IWindowsStoreService">
            <summary>
            Represents a service capable of retrieving Windows Store information about an application.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IWindowsStoreService.GetAppInformationAsync">
            <summary>
            Retrieves store information about the running application.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IWindowsStoreService.GetAppInformationAsync(System.String)">
            <summary>
            Retrieves store information about the running application.
            </summary>
            <param name="productId">The application Product ID.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.NavigationServiceBackKeyPressedBehavior">
            <summary>
            Indicates the expected behavior for when the user presses the hardware Back button.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.NavigationServiceBackKeyPressedBehavior.GoBack">
            <summary>
            Navigate to the most recent item in back navigation history.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.NavigationServiceBackKeyPressedBehavior.HideApp">
            <summary>
            Hide the app and returns to the main screen.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.NavigationServiceBackKeyPressedBehavior.ExitApp">
            <summary>
            Shuts down the app.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.NavigationServiceBackKeyPressedBehavior.DoNothing">
            <summary>
            Do nothing.
            </summary>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.NavigationServiceBackKeyPressedEventArgs">
            <summary>
            Provides information for the <see cref="E:Cimbalino.Toolkit.Services.INavigationService.BackKeyPressed"/> event.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.NavigationServiceBackKeyPressedEventArgs.Behavior">
            <summary>
            Gets or sets the expected behavior for when the user presses the hardware Back button.
            </summary>
            <value>The expected behavior for when the user presses the hardware Back button.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.RuntimeInformationServiceProfile">
            <summary>
            Indicates the device runtime profile.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.RuntimeInformationServiceProfile.WindowsPhoneSilverlight">
            <summary>
            Windows Phone Silverlight Runtime.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.RuntimeInformationServiceProfile.WindowsPhoneApp">
            <summary>
            Windows Phone Application Runtime.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.RuntimeInformationServiceProfile.WindowsApp">
            <summary>
            Windows Application Runtime.
            </summary>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppCapabilitiesNode">
            <summary>
            Represents the application capabilities information.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppCapabilitiesNode.Capabilities">
            <summary>
            Gets the application capabilities information.
            </summary>
            <value>The application capabilities information.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppCapabilitiesNode.HardwareCapabilities">
            <summary>
            Gets the application hardware capabilities information.
            </summary>
            <value>The application hardware capabilities information.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppCapabilityNode">
            <summary>
            Represents an application capability information.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppCapabilityNode.Id">
            <summary>
            Gets the application capability identifier.
            </summary>
            <value>The application capability identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppCapabilityNode.Title">
            <summary>
            Gets the application capability title.
            </summary>
            <value>The application capability title.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppCapabilityNode.Disclosure">
            <summary>
            Gets the application capability disclosure state.
            </summary>
            <value>The application capability disclosure state.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppCategoryNode">
            <summary>
            Represents an application category information.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppCategoryNode.Id">
            <summary>
            Gets the application category identifier.
            </summary>
            <value>The application category identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppCategoryNode.Title">
            <summary>
            Gets the application category title.
            </summary>
            <value>The application category title.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppCategoryNode.IsRoot">
            <summary>
            Gets a value indicating if this is a root category.
            </summary>
            <value>true if this is a root category; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppCategoryNode.ParentId">
            <summary>
            Gets the application category parent category identifier.
            </summary>
            <value>The application category parent category identifier.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppContentNode">
            <summary>
            Represents an application content information.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppContentNode.Type">
            <summary>
            Gets the application content information type.
            </summary>
            <value>The application content information type.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppContentNode.Text">
            <summary>
            Gets the application content information text.
            </summary>
            <value>The application content information text.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode">
            <summary>
            Represents the contents of the application entry information from the store.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.Updated">
            <summary>
            Gets the application entry .
            </summary>
            <value>The application entry .</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.Title">
            <summary>
            Gets the application entry title.
            </summary>
            <value>The application entry title.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.Id">
            <summary>
            Gets the application entry identifier.
            </summary>
            <value>The application entry identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.Version">
            <summary>
            Gets the application entry version.
            </summary>
            <value>The application entry version.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.PayloadId">
            <summary>
            Gets the application entry payload identifier.
            </summary>
            <value>The application entry payload identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.SkuId">
            <summary>
            Gets the application entry sku identifier.
            </summary>
            <value>The application entry sku identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.SkuLastUpdated">
            <summary>
            Gets the application entry sku last updated.
            </summary>
            <value>The application entry sku last updated.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.IsAvailableInCountry">
            <summary>
            Gets a value indicating whether the application entry is available in the country.
            </summary>
            <value>true if the application entry is available in the country; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.IsAvailableInStore">
            <summary>
            Gets a value indicating whether the application entry is available in the store.
            </summary>
            <value>true if the application entry is available in the store; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.IsClientTypeCompatible">
            <summary>
            Gets a value indicating whether the application entry is compatible with the client type.
            </summary>
            <value>true if the application entry is compatible with the client type; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.IsHardwareCompatible">
            <summary>
            Gets a value indicating whether the application entry is compatible with the hardware.
            </summary>
            <value>true if the application entry is compatible with the hardware; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.IsBlacklisted">
            <summary>
            Gets a value indicating whether the application entry is blacklisted.
            </summary>
            <value>true if the application entry is blacklisted; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.Url">
            <summary>
            Gets the application entry url.
            </summary>
            <value>The application entry url.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.PackageSize">
            <summary>
            Gets the application entry package size.
            </summary>
            <value>The application entry package size.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.InstallSize">
            <summary>
            Gets the application entry install size.
            </summary>
            <value>The application entry install size.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.ClientTypes">
            <summary>
            Gets the application entry client types.
            </summary>
            <value>The application entry client types.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.SupportedLanguages">
            <summary>
            Gets the application entry supported languages.
            </summary>
            <value>The application entry supported languages.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppEntryNode.DeviceCapabilities">
            <summary>
            Gets the application entry device capabilities.
            </summary>
            <value>The application entry device capabilities.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppHwCapabilityNode">
            <summary>
            Represents an application hardware capability information.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppHwCapabilityNode.RequirementType">
            <summary>
            Gets the application hardware capability requirement type.
            </summary>
            <value>The application hardware capability requirement type.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppHwCapabilityNode.Id">
            <summary>
            Gets the application hardware capability identifier.
            </summary>
            <value>The application hardware capability identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppHwCapabilityNode.Title">
            <summary>
            Gets the application hardware capability title.
            </summary>
            <value>The application hardware capability title.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppHwCapabilityNode.Required">
            <summary>
            Gets a value indicating whether the application hardware capability is required.
            </summary>
            <value>true if the application hardware capability is required; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppImageNode">
            <summary>
            Represents an application image information.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppImageNode.Id">
            <summary>
            Gets the application image identifier.
            </summary>
            <value>The application image identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppImageNode.Orientation">
            <summary>
            Gets the application image orientation.
            </summary>
            <value>The application image orientation.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode">
            <summary>
            Represents the contents of the application information from the store.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.Updated">
            <summary>
            Gets a value indicating whether the application is updated.
            </summary>
            <value>true if the application is updated; otherwise false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.Title">
            <summary>
            Gets the application title.
            </summary>
            <value>The application title.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.Id">
            <summary>
            Gets the application identifier.
            </summary>
            <value>The application identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.Content">
            <summary>
            Gets the application content information.
            </summary>
            <value>The application content information.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.IapCount">
            <summary>
            Gets the application content iap count.
            </summary>
            <value>The application content iap count.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.UserRatingCountDistributions">
            <summary>
            Gets the application user rating count distributions.
            </summary>
            <value>The application user rating count distributions.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.SortTitle">
            <summary>
            Gets the application sort title.
            </summary>
            <value>The application sort title.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.ReleaseDate">
            <summary>
            Gets the application release date.
            </summary>
            <value>The application release date.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.VisibilityStatus">
            <summary>
            Gets the application visibility state.
            </summary>
            <value>The application visibility state.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.Publisher">
            <summary>
            Gets the application publisher.
            </summary>
            <value>The application publisher.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.AverageUserRating">
            <summary>
            Gets the application average user rating.
            </summary>
            <value>The application average user rating.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.UserRatingCount">
            <summary>
            Gets the application user rating count.
            </summary>
            <value>The application user rating count.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.Image">
            <summary>
            Gets the application image.
            </summary>
            <value>The application image.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.Screenshots">
            <summary>
            Gets the application screenshots.
            </summary>
            <value>The application screenshots.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.Categories">
            <summary>
            Gets the application categories.
            </summary>
            <value>The application categories.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.Tags">
            <summary>
            Gets the application tags.
            </summary>
            <value>The application tags.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.TaxString">
            <summary>
            Gets the application tax string.
            </summary>
            <value>The application tax string.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.BackgroundImage">
            <summary>
            Gets the application background image.
            </summary>
            <value>The application background image.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.Offers">
            <summary>
            Gets the application available offers.
            </summary>
            <value>The application available offers.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.PublisherId">
            <summary>
            Gets the application publisher identifier.
            </summary>
            <value>The application publisher identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.PublisherGuid">
            <summary>
            Gets the application publisher unique identifier.
            </summary>
            <value>The application publisher unique identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.Entry">
            <summary>
            Gets the application entry information.
            </summary>
            <value>The application entry information.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppNode.IsUniversal">
            <summary>
            Gets a value indicating whether the application is an Universal App.
            </summary>
            <value>true if the application is an Universal App; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppOfferNode">
            <summary>
            Represents the contents of the application offer information from the store.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppOfferNode.OfferId">
            <summary>
            Gets the offer identifier.
            </summary>
            <value>The offer identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppOfferNode.MediaInstanceId">
            <summary>
            Gets the offer media instance identifier.
            </summary>
            <value>The offer media instance identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppOfferNode.ClientTypes">
            <summary>
            Gets the offer client types.
            </summary>
            <value>The offer client types.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppOfferNode.PaymentTypes">
            <summary>
            Gets the offer payment types.
            </summary>
            <value>The offer payment types.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppOfferNode.Store">
            <summary>
            Gets the offer store.
            </summary>
            <value>The offer store.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppOfferNode.Price">
            <summary>
            Gets the offer price.
            </summary>
            <value>The offer price.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppOfferNode.DisplayPrice">
            <summary>
            Gets the offer display price.
            </summary>
            <value>The offer display price.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppOfferNode.PriceCurrencyCode">
            <summary>
            Gets the offer price currency code.
            </summary>
            <value>The offer price currency code.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppOfferNode.LicenseRight">
            <summary>
            Gets the offer license right.
            </summary>
            <value>The offer license right.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppOfferNode.Expiration">
            <summary>
            Gets the offer expiration.
            </summary>
            <value>The offer expiration.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppRatingsDistributionsNode">
            <summary>
            Represents an application ratings distribution information.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppRatingsDistributionsNode.OneStarRatings">
            <summary>
            Gets the application one star ratings count.
            </summary>
            <value>The application one star ratings count.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppRatingsDistributionsNode.TwoStarRatings">
            <summary>
            Gets the application two star ratings count.
            </summary>
            <value>The application two star ratings count.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppRatingsDistributionsNode.ThreeStarRatings">
            <summary>
            Gets the application three star ratings count.
            </summary>
            <value>The application three star ratings count.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppRatingsDistributionsNode.FourStarRatings">
            <summary>
            Gets the application four star ratings count.
            </summary>
            <value>The application four star ratings count.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsPhoneStoreServiceAppRatingsDistributionsNode.FiveStarRatings">
            <summary>
            Gets the application five star ratings count.
            </summary>
            <value>The application five star ratings count.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsStoreServiceAppArchitectureNode">
            <summary>
            Represents an application supported architecture information.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppArchitectureNode.Name">
            <summary>
            Gets the application supported architecture name.
            </summary>
            <value>The application supported architecture name.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsStoreServiceAppCategoryNode">
            <summary>
            Represents an application category information.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppCategoryNode.Id">
            <summary>
            Gets the application category identifier.
            </summary>
            <value>The application category identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppCategoryNode.Name">
            <summary>
            Gets the application category name.
            </summary>
            <value>The application category name.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode">
            <summary>
            Represents the contents of the application information from the store.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.Package">
            <summary>
            Gets the application package.
            </summary>
            <value>The application package.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.Description">
            <summary>
            Gets the application description.
            </summary>
            <value>The application description.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.Features">
            <summary>
            Gets the application features.
            </summary>
            <value>The application features.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.UpdateDescription">
            <summary>
            Gets the application update description.
            </summary>
            <value>The application update description.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.BaseLanguage">
            <summary>
            Gets the application base language.
            </summary>
            <value>The application base language.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.SupportedLanguages">
            <summary>
            Gets the application supported languages.
            </summary>
            <value>The application supported languages.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.DeveloperName">
            <summary>
            Gets the application developer name.
            </summary>
            <value>The application developer name.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.DeveloperId">
            <summary>
            Gets the application developer id.
            </summary>
            <value>The application developer id.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.Copyright">
            <summary>
            Gets the application copyright.
            </summary>
            <value>The application copyright.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.Website">
            <summary>
            Gets the application website.
            </summary>
            <value>The application website.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.SupportWebsite">
            <summary>
            Gets the application support website.
            </summary>
            <value>The application support website.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.PrivacyPolicyWebsite">
            <summary>
            Gets the application privacy policy website.
            </summary>
            <value>The application privacy policy website.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.EndUserLicenseAgreement">
            <summary>
            Gets the application end user license agreement.
            </summary>
            <value>The application end user license agreement.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.SupportedArchitectures">
            <summary>
            Gets the application supported architectures.
            </summary>
            <value>The application supported architectures.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppNode.Screenshots">
            <summary>
            Gets the application screenshots.
            </summary>
            <value>The application screenshots.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode">
            <summary>
            Represents an application package information.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.Id">
            <summary>
            Gets the application package identifier.
            </summary>
            <value>The application package identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.ReleaseId">
            <summary>
            Gets the application package release identifier.
            </summary>
            <value>The application package release identifier.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.FamilyName">
            <summary>
            Gets the application package family name.
            </summary>
            <value>The application package family name.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.Language">
            <summary>
            Gets the application package language.
            </summary>
            <value>The application package language.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.Title">
            <summary>
            Gets the application package title.
            </summary>
            <value>The application package title.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.Icon">
            <summary>
            Gets the application package icon.
            </summary>
            <value>The application package icon.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.BackgroundColor">
            <summary>
            Gets the application package background color.
            </summary>
            <value>The application package background color.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.ForegroundColor">
            <summary>
            Gets the application package foreground color.
            </summary>
            <value>The application package foreground color.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.CurrencySymbol">
            <summary>
            Gets the application package currency symbol.
            </summary>
            <value>The application package currency symbol.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.Currency">
            <summary>
            Gets the application package currency.
            </summary>
            <value>The application package currency.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.Price">
            <summary>
            Gets the application package price.
            </summary>
            <value>The application package price.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.Category">
            <summary>
            Gets the application package category.
            </summary>
            <value>The application package category.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.SubCategory">
            <summary>
            Gets the application package sub-category.
            </summary>
            <value>The application package sub-category.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppPackageNode.LastUpdate">
            <summary>
            Gets the application package last update.
            </summary>
            <value>The application package last update.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsStoreServiceAppScreenshotNode">
            <summary>
            Represents an application screenshot information.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppScreenshotNode.Url">
            <summary>
            Gets the application screenshot url.
            </summary>
            <value>The application screenshot url.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.WindowsStoreServiceAppScreenshotNode.Caption">
            <summary>
            Gets the application screenshot caption.
            </summary>
            <value>The application screenshot caption.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Compression.ZlibStream">
            <summary>
            Provides methods and properties for compressing and decompressing streams by using the Zlib algorithm.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Compression.ZlibStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Compression.ZlibStream"/> class by using the specified stream and compression mode.
            </summary>
            <param name="stream">The stream to compress or decompress.</param>
            <param name="mode">One of the enumeration values that indicates whether to compress or decompress the stream.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Compression.ZlibStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Compression.ZlibStream"/> class by using the specified stream and compression mode, and optionally leaves the stream open.
            </summary>
            <param name="stream">The stream to compress or decompress.</param>
            <param name="mode">One of the enumeration values that indicates whether to compress or decompress the stream.</param>
            <param name="leaveOpen">true to leave the stream open after disposing the DeflateStream object; otherwise, false.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Compression.ZlibStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Compression.ZlibStream"/> class by using the specified stream and compression level.
            </summary>
            <param name="stream">The stream to compress or decompress.</param>
            <param name="compressionLevel">One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Compression.ZlibStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Compression.ZlibStream"/> class by using the specified stream and compression level, and optionally leaves the stream open.
            </summary>
            <param name="stream">The stream to compress or decompress.</param>
            <param name="compressionLevel">One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</param>
            <param name="leaveOpen">true to leave the stream open after disposing the DeflateStream object; otherwise, false.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Compression.ZlibStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes compressed bytes to the underlying stream from the specified byte array.
            </summary>
            <param name="array">The buffer that contains the data to compress.</param>
            <param name="offset">The byte offset in <paramref name="array"/> from which the bytes will be read.</param>
            <param name="count">The maximum number of bytes to write.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Compression.ZlibStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the DeflateStream and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.EventHandlerExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.EventHandler`1"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.EventHandlerExtensions.SafeInvoke(System.EventHandler,System.Object,System.EventArgs)">
            <summary>
            Raises the event.
            </summary>
            <param name="eventHandler">The event to raise.</param>
            <param name="sender">The source of the event.</param>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Raises the event.
            </summary>
            <param name="eventHandler">The event to raise.</param>
            <param name="sender">The source of the event.</param>
            <param name="eventArgs">The arguments for the event.</param>
            <typeparam name="T">The type of the event data generated by the event.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.EventHandlerExtensions.SafeInvoke(System.EventHandler,System.Object,System.EventArgs,System.Func{System.EventArgs,System.Boolean})">
            <summary>
            Raises the event with cancellation possibility.
            </summary>
            <param name="eventHandler">The event to raise.</param>
            <param name="sender">The source of the event.</param>
            <param name="eventArgs">The arguments for the event.</param>
            <param name="cancelInvocation">A predicate that returns true to cancel the invocation.</param>
            <returns>true if the event has not been cancelled by any of the subscribers; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.EventHandlerExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,``0,System.Func{``0,System.Boolean})">
            <summary>
            Raises the event with cancellation possibility.
            </summary>
            <param name="eventHandler">The event to raise.</param>
            <param name="sender">The source of the event.</param>
            <param name="eventArgs">The arguments for the event.</param>
            <param name="cancelInvocation">A predicate that returns true to cancel the invocation.</param>
            <typeparam name="T">The type of the event data generated by the event.</typeparam>
            <returns>true if the event has not been cancelled by any of the subscribers; otherwise, false.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.ICollectionExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Collections.Generic.ICollection`1"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ICollectionExtensions.IsEmpty``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Determines whether the specified <see cref="T:System.Collections.Generic.ICollection`1"/> is empty.
            </summary>
            <param name="collection">The <see cref="T:System.Collections.Generic.ICollection`1"/> to check.</param>
            <typeparam name="TSource">The collection items type.</typeparam>
            <returns>True if the collection is empty; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.ICollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="sourceCollection">The <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <param name="collection">The collection whose elements should be added to the end of the <see cref="T:System.Collections.Generic.ICollection`1"/>. The collection itself cannot be null, but it can contain elements that are null, if type TSource is a reference type.</param>
            <typeparam name="TSource">The collection items type.</typeparam>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.IComparableExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.IComparable"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IComparableExtensions.Between``1(``0,``0,``0)">
            <summary>
            Checks if the value is between two other values.
            </summary>
            <param name="value">The value.</param>
            <param name="minValue">The lower value in the range.</param>
            <param name="maxValue">The upper value in the range.</param>
            <typeparam name="T">The values type.</typeparam>
            <returns>True if the value is between the two other values; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IComparableExtensions.Clamp``1(``0,``0,``0)">
            <summary>
            Clamps the a value between two other values.
            </summary>
            <param name="value">The value.</param>
            <param name="minValue">The lower value in the range.</param>
            <param name="maxValue">The upper value in the range.</param>
            <typeparam name="T">The values type.</typeparam>
            <returns>The value clamped between the two other specified values.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IComparableExtensions.Max``1(``0,``0)">
            <summary>
            Compares the current value with another value and returns the largest of the two.
            </summary>
            <param name="currentValue">The value.</param>
            <param name="value">The value to compare to.</param>
            <typeparam name="T">The values type.</typeparam>
            <returns>The largest of the two values.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IComparableExtensions.Min``1(``0,``0)">
            <summary>
            Compares the current value with another value and returns the smallest of the two.
            </summary>
            <param name="currentValue">The value.</param>
            <param name="value">The value to compare to.</param>
            <typeparam name="T">The values type.</typeparam>
            <returns>The smallest of the two values.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.IDictionaryExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Collections.Generic.IDictionary`2"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IDictionaryExtensions.Apply``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Action{System.Collections.Generic.KeyValuePair{``0,``1}})">
            <summary>
            Applies the specified <see cref="T:System.Action`1"/> to the dictionary.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="action">The action to apply.</param>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IDictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key whose value to get.</param>
            <returns>The value for the specified key.</returns>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IDictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key whose value to get.</param>
            <param name="defaultValue">The default value if the specified key does not exist.</param>
            <returns>The value for the specified key.</returns>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IDictionaryExtensions.SetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Sets the value for the specified key. If the entry does not exist, a new one will be added.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key whose value to set.</param>
            <param name="value">The value for the specified key.</param>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IDictionaryExtensions.ToQueryString(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Creates a proper query string for the values in the dictionary.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>A proper query string.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IDictionaryExtensions.ToQueryString(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean)">
            <summary>
            Creates a proper query string for the values in the dictionary, with or without empty values included.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="includeEmptyValues">If the empty values should be included in the resulting query string.</param>
            <returns>A proper query string.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.IEnumerableExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Collections.Generic.IEnumerable`1"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IEnumerableExtensions.Apply``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Applies the specified <see cref="T:System.Action`1"/> to the enumerable.
            </summary>
            <param name="source">The enumerable.</param>
            <param name="action">The action to apply.</param>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IEnumerableExtensions.Apply``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
            <summary>
            Applies the specified <see cref="T:System.Action`2"/> to the enumerable.
            </summary>
            <param name="source">The enumerable.</param>
            <param name="action">The action to apply.</param>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IEnumerableExtensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Returns a collection of the descendant elements for this enumerable, using the specified <see cref="T:System.Func`2"/> function.
            </summary>
            <param name="source">The enumerable.</param>
            <param name="descendBy">The function to use for descending.</param>
            <returns>All the descendant items.</returns>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IEnumerableExtensions.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> from this enumerable.
            </summary>
            <param name="source">The enumerable.</param>
            <returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> that contains the elements from the input sequence.</returns>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IEnumerableExtensions.ToOptimizedObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an <see cref="T:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1"/> from this enumerable.
            </summary>
            <param name="source">The enumerable.</param>
            <returns>An <see cref="T:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1"/> that contains the elements from the input sequence.</returns>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IEnumerableExtensions.ToEnumerable``1(``0)">
            <summary>
            Creates a new enumerable containing the specified element.
            </summary>
            <param name="element">A <typeparamref name="TResult"/> element to include in the sequence.</param>
            <returns>A new enumerable containing the specified element.</returns>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IEnumerableExtensions.Concat``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Produces a sequence containing the current elements along with the specified element.
            </summary>
            <param name="source">The enumerable.</param>
            <param name="element">A <typeparamref name="TResult"/> element to include in the sequence.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the current elements along with the specified element.</returns>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IEnumerableExtensions.Slice``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Produces a sequence containing a subset of the current elements, starting from the specified position.
            </summary>
            <param name="source">The enumerable.</param>
            <param name="offset">The zero-based offset at which to begin returning items from the enumerable.</param>
            <param name="count">The number of items to return from the enumerable.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains a subset of the current elements, starting from the specified position.</returns>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IEnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Produces a sequence containing the current elements randomly shuffled.
            </summary>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
            <param name="source">The enumerable.</param>
            <returns>A sequence containing the current elements randomly shuffled.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IEnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Produces a sequence containing the current elements randomly shuffled, using the specified seed to calculate a starting value for the pseudo-random number sequence.
            </summary>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
            <param name="source">The enumerable.</param>
            <param name="seed">A number used to calculate a starting value for the pseudo-random number sequence. If a negative number is specified, the absolute value of the number is used.</param>
            <returns>A sequence containing the current elements randomly shuffled.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Produces a sequence containing batches of the current elements with the specified size.
            </summary>
            <param name="source">The enumerable.</param>
            <param name="batchSize">The batch size.</param>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
            <returns>A sequence containing batches of the current elements with the specified size.</returns>
            <exception cref="T:System.ArgumentException">If the batch size is below 1.</exception>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IEnumerableExtensions.Combinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Boolean)">
            <summary>
            Produces a sequence containing all possible combinations of the current elements with the specified selection size.
            </summary>
            <param name="source">The enumerable.</param>
            <param name="groupSize">The subset size.</param>
            <param name="allowRepeat">true if the item can appear repeated in the subset; otherwise, false.</param>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
            <returns>A sequence containing all possible combinations of the current elements with the specified selection size.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IEnumerableExtensions.Permutations``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Boolean)">
            <summary>
            Produces a sequence containing all possible permutations of the current elements with the specified selection size.
            </summary>
            <param name="source">The enumerable.</param>
            <param name="groupSize">The subset size.</param>
            <param name="allowRepeat">true if the item can appear repeated in the subset; otherwise, false.</param>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
            <returns>A sequence containing all possible permutations of the current elements with the specified selection size.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.IFormattableExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.IFormattable"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IFormattableExtensions.ToStringInvariantCulture(System.IFormattable,System.String)">
            <summary>
            Converts the value of this instance to its equivalent string representation, using the specified format and an <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
            <param name="input">The input.</param>
            <param name="format">A standard or custom format string.</param>
            <returns>The string representation of the value of this instance as specified by <paramref name="format"/>.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.IntExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Int32"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IntExtensions.Times(System.Int32,System.Action)">
            <summary>
            Repeats the specified <see cref="T:System.Action"/> the number of times.
            </summary>
            <param name="input">The number of times to repeat the <see cref="T:System.Action"/>.</param>
            <param name="action">The <see cref="T:System.Action"/> to repeat.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IntExtensions.Times(System.Int32,System.Action{System.Int32})">
            <summary>
            Repeats the specified <see cref="T:System.Action`1"/> the number of times.
            </summary>
            <param name="input">The number of times to repeat the <see cref="T:System.Action`1"/>.</param>
            <param name="action">The <see cref="T:System.Action`1"/> to repeat.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IntExtensions.Times``1(System.Int32,System.Func{``0})">
            <summary>
            Repeats the specified <see cref="T:System.Func`1"/> the number of times.
            </summary>
            <param name="input">The number of times to repeat the <see cref="T:System.Action"/>.</param>
            <param name="function">The <see cref="T:System.Func`1"/> to repeat.</param>
            <typeparam name="T">The return value type.</typeparam>
            <returns>An enumerable with the results.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IntExtensions.Times``1(System.Int32,System.Func{System.Int32,``0})">
            <summary>
            Repeats the specified <see cref="T:System.Func`2"/> the number of times.
            </summary>
            <param name="input">The number of times to repeat the <see cref="T:System.Action"/>.</param>
            <param name="function">The <see cref="T:System.Func`2"/> to repeat.</param>
            <typeparam name="T">The return value type.</typeparam>
            <returns>An enumerable with the results.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IntExtensions.Range(System.Int32,System.Int32)">
            <summary>
            Generates a sequence of integral numbers within a specified range.
            </summary>
            <param name="first">The value of the first integer in the sequence.</param>
            <param name="count">The number of sequential integers to generate.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains a range of sequential integral numbers.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IntExtensions.To(System.Int32,System.Int32)">
            <summary>
            Generates a sequence of integral numbers within a specified range.
            </summary>
            <param name="first">The value of the first integer in the sequence.</param>
            <param name="last">The value of the last integer in the sequence.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains a range of sequential integral numbers.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IntExtensions.IsPrime(System.Int32)">
            <summary>
            Indicates whether the value is a prime number.
            </summary>
            <param name="input">The number to test.</param>
            <returns>true if the value is a prime number; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.IntExtensions.PrimeFactors(System.Int32)">
            <summary>
            Generates a list with all the prime factors for the input number.
            </summary>
            <param name="input">The number.</param>
            <returns>A list with all the prime factors for the input number.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.StreamReaderExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.IO.StreamReader"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StreamReaderExtensions.ReadLines(System.IO.StreamReader)">
            <summary>
            Reads the lines of a stream.
            </summary>
            <param name="streamReader">The <see cref="T:System.IO.StreamReader"/> instance.</param>
            <returns>The lines of the stream.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StreamReaderExtensions.ReadAllLines(System.IO.StreamReader)">
            <summary>
            Reads all lines of the stream.
            </summary>
            <param name="streamReader">The <see cref="T:System.IO.StreamReader"/> instance.</param>
            <returns>A string array containing all lines of the stream.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StreamReaderExtensions.ReadAllLinesAsync(System.IO.StreamReader)">
            <summary>
            Reads all lines of the stream.
            </summary>
            <param name="streamReader">The <see cref="T:System.IO.StreamReader"/> instance.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.StreamWriterExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.IO.StreamWriter"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StreamWriterExtensions.WriteAllLines(System.IO.StreamWriter,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Writes all lines.
            </summary>
            <param name="streamWriter">The stream writer.</param>
            <param name="lines">The lines.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StreamWriterExtensions.WriteAllLinesAsync(System.IO.StreamWriter,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Writes all lines.
            </summary>
            <param name="streamWriter">The stream writer.</param>
            <param name="lines">The lines.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.StringExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.String"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.GetBytes(System.String)">
            <summary>
            Encodes all the characters in the string into a sequence of UTF8 bytes.
            </summary>
            <param name="input">The current string.</param>
            <returns>A byte array containing the results of encoding the set of characters.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.GetBytes(System.String,System.Text.Encoding)">
            <summary>
            Encodes all the characters in the string into a sequence of bytes, using the specified <see cref="T:System.Text.Encoding"/>.
            </summary>
            <param name="input">The current string.</param>
            <param name="encoding">The <see cref="T:System.Text.Encoding"/> to use for encoding the characters.</param>
            <returns>A byte array containing the results of encoding the set of characters.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.FromBase64String(System.String)">
            <summary>
            Converts the string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.
            </summary>
            <param name="input">The current string.</param>
            <returns>An array of 8-bit unsigned integers that is equivalent to the string.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.FormatWith(System.String,System.Object[])">
            <summary>
            Replaces one or more format items in the string with the string representation of a specified object.
            </summary>
            <param name="format">The composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>A copy of the string in which the format items have been replaced by the string representation of the corresponding objects in args.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])">
            <summary>
            Replaces one or more format items in the string with the string representation of a specified object.
            </summary>
            <param name="format">The composite format string.</param>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>A copy of the string in which the format items have been replaced by the string representation of the corresponding objects in args.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.FormatWithInvariantCulture(System.String,System.Object[])">
            <summary>
            Replaces one or more format items in the string with the string representation of a specified object, using an <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
            <param name="format">The composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>A copy of the string in which the format items have been replaced by the string representation of the corresponding objects in args.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.Left(System.String,System.Int32)">
            <summary>
            Returns a new string containing the specified number of characters from the left side of the current string.
            </summary>
            <param name="input">The current string.</param>
            <param name="length">The number of characters to return. If 0, a zero-length string ("") is returned. If greater than or equal to the number of characters in the string, the entire string is returned.</param>
            <returns>Returns a string containing a specified number of characters from the left side of the string.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.Right(System.String,System.Int32)">
            <summary>
            Returns a new string containing the specified number of characters from the right side of the current string.
            </summary>
            <param name="input">The current string.</param>
            <param name="length">The number of characters to return. If 0, a zero-length string ("") is returned. If greater than or equal to the number of characters in the string, the entire string is returned.</param>
            <returns>Returns a string containing a specified number of characters from the right side of the string.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.RemoveLeft(System.String,System.Int32)">
            <summary>
            Returns a new string in which a specified number of characters from the left side of the current string are deleted.
            </summary>
            <param name="input">The current string.</param>
            <param name="length">The number of characters to remove. If greater than or equal to the number of characters in the string, an empty string is returned.</param>
            <returns>Returns a string in which a specified number of characters from the left side of the current string where deleted.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.RemoveRight(System.String,System.Int32)">
            <summary>
            Returns a new string in which a specified number of characters from the right side of the current string are deleted.
            </summary>
            <param name="input">The current string.</param>
            <param name="length">The number of characters to remove. If greater than or equal to the number of characters in the string, an empty string is returned.</param>
            <returns>Returns a string in which a specified number of characters from the right side of the current string where deleted.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.Times(System.String,System.Int32)">
            <summary>
            Returns a new string by repeating the current string the specified number of times.
            </summary>
            <param name="input">The current string.</param>
            <param name="count">The number of times the current string occurs.</param>
            <returns>A new string by repeating the current string the specified number of times.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.RegexIsMatch(System.String,System.String)">
            <summary>
            Indicates whether the regular expression finds a match in the input string using the regular expression specified in the pattern parameter.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <returns>true if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.RegexIsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Indicates whether the regular expression finds a match in the input string, using the regular expression specified in the pattern parameter and the matching options supplied in the options parameter.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values.</param>
            <returns>true if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.RegexMatch(System.String,System.String)">
            <summary>
            Searches the specified input string for the first occurrence of the regular expression supplied in the pattern parameter.
            </summary>
            <param name="input">The string to be tested for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <returns>An object that contains information about the match.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.RegexMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Searches the input string for the first occurrence of the regular expression supplied in a pattern parameter with matching options supplied in an options parameter.
            </summary>
            <param name="input">The string to be tested for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values.</param>
            <returns>An object that contains information about the match.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.RegexMatches(System.String,System.String)">
            <summary>
            Searches the specified input string for all occurrences of the regular expression specified in the pattern parameter.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <returns>A collection of the <see cref="T:System.Text.RegularExpressions.Match"/> objects found by the search. If no matches are found, the method returns an empty collection object.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.RegexMatches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Searches the specified input string for all occurrences of the regular expression supplied in a pattern parameter with matching options supplied in an options parameter.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values.</param>
            <returns>A collection of the <see cref="T:System.Text.RegularExpressions.Match"/> objects found by the search. If no matches are found, the method returns an empty collection object.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.String)">
            <summary>
            Within a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="replacement">The replacement string.</param>
            <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Within a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="replacement">The replacement string.</param>
            <param name="options">A bitwise combination of the enumeration values.</param>
            <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
            <summary>
            Within a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator"/> delegate.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
            <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Within a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator"/> delegate. Specified options modify the matching operation.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
            <param name="options">A bitwise combination of the enumeration values.</param>
            <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.UriExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Uri"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.UriExtensions.QueryString(System.Uri)">
            <summary>
            Gets a collection of query string values.
            </summary>
            <param name="uri">The current uri.</param>
            <returns>A collection that contains the query string values.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.WebRequestExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Net.WebRequest"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.WebRequestExtensions.SetNoCacheHeaders(System.Net.WebRequest)">
            <summary>
            Set <see cref="P:System.Net.WebRequest.Headers"/> collection with "no-cache header values.
            </summary>
            <param name="request">The web request.</param>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.XmlReaderExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Xml.XmlReader"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.XmlReaderExtensions.ReadElementContentAsUrn(System.Xml.XmlReader)">
            <summary>
            Reads the current element as a urn and returns the contents as a string.
            </summary>
            <param name="reader">The current reader.</param>
            <returns>The element content as a string.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.XmlReaderExtensions.ReadElementContentAsNullable``1(System.Xml.XmlReader)">
            <summary>
            Reads the current element as the requested nullable type.
            </summary>
            <param name="reader">The current reader.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>The element content converted to the requested nullable typed object.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.XmlReaderExtensions.ReadElementContentAsArray``1(System.Xml.XmlReader,System.Func{System.Xml.XmlReader,``0})">
            <summary>
            Reads the current element as an array and returns the contents using the specified function.
            </summary>
            <param name="reader">The current reader.</param>
            <param name="deserialize">The deserialization function.</param>
            <typeparam name="T">The array return type.</typeparam>
            <returns>An array containing the deserialized items.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.XmlReaderExtensions.GetAttributeAsBool(System.Xml.XmlReader,System.String)">
            <summary>
            Gets the value of the attribute with the specified name, as a boolean value.
            </summary>
            <param name="reader">The current reader.</param>
            <param name="name">The name of the attribute.</param>
            <returns>The value of the attribute with the specified name, as a boolean value.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.XmlReaderExtensions.GetAttributeAsInt(System.Xml.XmlReader,System.String)">
            <summary>
            Gets the value of the attribute with the specified name, as an <see cref="T:System.Int32"/> value.
            </summary>
            <param name="reader">The current reader.</param>
            <param name="name">The name of the attribute.</param>
            <returns>The value of the attribute with the specified name, as an <see cref="T:System.Int32"/> value.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.XmlReaderExtensions.GetAndSkip``1(System.Xml.XmlReader,System.Func{System.Xml.XmlReader,``0})">
            <summary>
            Executes the specified function, skips the current node, and returns the value.
            </summary>
            <param name="reader">The current reader.</param>
            <param name="readerFunction">The function to execute.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>The result value from the executed function, just after skipping to the next node.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Foundation.Rect">
            <summary>
            Describes the width, height, and point origin of a rectangle.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Foundation.Rect.#ctor(Cimbalino.Toolkit.Foundation.Point,Cimbalino.Toolkit.Foundation.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Foundation.Rect"/> structure that is exactly large enough to contain the two specified points.
            </summary>
            <param name="point1">The first point that the new rectangle must contain.</param>
            <param name="point2">The second point that the new rectangle must contain.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Foundation.Rect.#ctor(Cimbalino.Toolkit.Foundation.Point,Cimbalino.Toolkit.Foundation.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Foundation.Rect"/> structure that has the specified top-left corner location and the specified width and height.
            </summary>
            <param name="location">A point that specifies the location of the top-left corner of the rectangle.</param>
            <param name="size">A <see cref="P:Cimbalino.Toolkit.Foundation.Rect.Size"/> structure that specifies the width and height of the rectangle.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Foundation.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Foundation.Rect"/> structure that has the specified x-coordinate, y-coordinate, width, and height.
            </summary>
            <param name="x">The x-coordinate of the top-left corner of the rectangle.</param>
            <param name="y">The y-coordinate of the top-left corner of the rectangle.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Foundation.Rect.Contains(Cimbalino.Toolkit.Foundation.Point)">
            <summary>
            Indicates whether the rectangle contains the specified point.
            </summary>
            <param name="point">The point to check.</param>
            <returns>true if the rectangle contains the specified point; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Foundation.Rect.Contains(System.Double,System.Double)">
            <summary>
            Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.
            </summary>
            <param name="x">The x-coordinate of the point to check.</param>
            <param name="y">The y-coordinate of the point to check.</param>
            <returns>true if (<paramref name="x" />, <paramref name="y" />) is contained by the rectangle; otherwise, false.</returns>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.X">
            <summary>
            Gets or sets the x-axis value of the left side of the rectangle.
            </summary>
            <value>The x-axis value of the left side of the rectangle. This value is interpreted as pixels within the coordinate space.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.Y">
            <summary>
            Gets or sets the y-axis value of the top side of the rectangle.
            </summary>
            <value>The y-axis value of the top side of the rectangle. This value is interpreted as pixels within the coordinate space.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.Width">
            <summary>
            Gets or sets the width of the rectangle.
            </summary>
            <value>A value that represents the width of the rectangle in pixels. The default is 0.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.Height">
            <summary>
            Gets or sets the height of the rectangle.
            </summary>
            <value>A value that represents the height of the rectangle. The default is 0.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.Left">
            <summary>
            Gets the x-axis value of the left side of the rectangle.
            </summary>
            <value>The x-axis value of the left side of the rectangle.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.Right">
            <summary>
            Gets the x-axis value of the right side of the rectangle.
            </summary>
            <value>The x-axis value of the right side of the rectangle.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.Top">
            <summary>
            Gets the y-axis position of the top of the rectangle.
            </summary>
            <value>The y-axis position of the top of the rectangle.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.Bottom">
            <summary>
            Gets the y-axis value of the bottom of the rectangle.
            </summary>
            <value>The y-axis value of the bottom of the rectangle.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.TopLeft">
            <summary>
            Gets the position of the top-left corner of the rectangle. 
            </summary>
            <value>The position of the top-left corner of the rectangle.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.TopRight">
            <summary>
            Gets the position of the top-right corner of the rectangle.
            </summary>
            <value>The position of the top-right corner of the rectangle.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.BottomLeft">
            <summary>
            Gets the position of the bottom-left corner of the rectangle.
            </summary>
            <value>The position of the bottom-left corner of the rectangle.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.BottomRight">
            <summary>
            Gets the position of the bottom-right corner of the rectangle.
            </summary>
            <value>The position of the bottom-right corner of the rectangle.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.Size">
            <summary>
            Gets the width and height of the rectangle.
            </summary>
            <value>A <see cref="P:Cimbalino.Toolkit.Foundation.Rect.Size"/> structure that specifies the width and height of the rectangle.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.IsEmpty">
            <summary>
            Gets a value indicating whether the rectangle is the <see cref="P:Cimbalino.Toolkit.Foundation.Rect.Empty"/> rectangle.
            </summary>
            <value>true if the rectangle is the <see cref="P:Cimbalino.Toolkit.Foundation.Rect.Empty"/> rectangle; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Foundation.Rect.Empty">
            <summary>
            Gets a special value that represents a rectangle with no position or area.
            </summary>
            <value>A rectangle with no position or area.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.ChunkedStream">
            <summary>
            Creates a stream that helps dividing data in fixed size chunks.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ChunkedStream.#ctor(System.Int32,System.Action{System.Byte[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.ChunkedStream"/> class.
            </summary>
            <param name="chunkSize">The chunk size.</param>
            <param name="chunkReadyAction">The <see cref="T:System.Action"/> to perform when a chunk is ready.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ChunkedStream.Flush">
            <summary>
            Overrides <see cref="M:System.IO.Stream.Flush"/> so that no action is performed.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ChunkedStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This method is not supported.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
            <returns>Calling this method will raise a <see cref="T:System.NotSupportedException"/>.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ChunkedStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            This method is not supported.
            </summary>
            <param name="offset">The offset.</param>
            <param name="origin">The origin.</param>
            <returns>Calling this method will raise a <see cref="T:System.NotSupportedException"/>.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ChunkedStream.SetLength(System.Int64)">
            <summary>
            This method is not supported.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ChunkedStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a block of bytes to the current stream using data read from a buffer.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The maximum number of bytes to write.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.ChunkedStream.Dispose(System.Boolean)">
            <summary>
            Closes the current stream and releases all resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ChunkedStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <value>Always false as <see cref="T:Cimbalino.Toolkit.Helpers.ChunkedStream"/> doesn't support reading.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ChunkedStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <value>Always false as <see cref="T:Cimbalino.Toolkit.Helpers.ChunkedStream"/> doesn't support seeking.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ChunkedStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <value>true if the stream supports writing; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ChunkedStream.Length">
            <summary>
            This property is not supported.
            </summary>
            <value>The length.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.ChunkedStream.Position">
            <summary>
            This property is not supported.
            </summary>
            <value>The position.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1">
            <summary>
            Optimized version of the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> class.
            </summary>
            <typeparam name="T">The type of items in the collection.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1"/> class.
            </summary>
            <param name="items">The collection from which the items are copied.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged"/> event with the provided event data.
            </summary>
            <param name="e">The event data to report in the event.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the specified items collection to the current <see cref="T:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1"/> instance.
            </summary>
            <param name="items">The collection from which the items are copied.</param>
            <exception cref="T:System.ArgumentNullException">The items list is null.</exception>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1.ReplaceWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Replaces the current <see cref="T:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1"/> instance items with the ones specified in the items collection, raising a single <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset"/> event.
            </summary>
            <param name="items">The collection from which the items are copied.</param>
            <exception cref="T:System.ArgumentNullException">The items list is null.</exception>
        </member>
        <member name="M:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1.SwitchTo(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Switches the current <see cref="T:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1"/> instance items with the ones specified in the items collection, raising the minimum required change events.
            </summary>
            <param name="items">The collection from which the items are copied.</param>
            <exception cref="T:System.ArgumentNullException">The items list is null.</exception>
        </member>
        <member name="P:Cimbalino.Toolkit.Helpers.OptimizedObservableCollection`1.SuppressEvents">
            <summary>
            Gets or sets a value indicating whether the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged"/> events are raised.
            </summary>
            <value>true if the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged"/> events are raised; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IDeviceSettingsService">
            <summary>
            Represents a service capable of launching a Settings dialog that allows the user to change the device's settings.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IDeviceSettingsService.ShowAirplaneModeSettingsAsync">
            <summary>
            Shows the Airplane Mode settings dialog.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IDeviceSettingsService.ShowBluetoothSettingsAsync">
            <summary>
            Shows the Bluetooth settings dialog.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IDeviceSettingsService.ShowCameraSettingsAsync">
            <summary>
            Shows the Photos+Camera settings dialog.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IDeviceSettingsService.ShowCellularSettingsAsync">
            <summary>
            Shows the Cellular settings dialog.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IDeviceSettingsService.ShowEmailAndAccountsSettingsAsync">
            <summary>
            Shows the Email and Accounts settings dialog.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IDeviceSettingsService.ShowLocationSettingsAsync">
            <summary>
            Shows the Location settings dialog.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IDeviceSettingsService.ShowLockScreenSettingsAsync">
            <summary>
            Shows the Lock Screen settings dialog.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IDeviceSettingsService.ShowNotificationSettingsAsync">
            <summary>
            Shows the Notifications+Actions settings dialog.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IDeviceSettingsService.ShowPowerSettingsAsync">
            <summary>
            Shows the Power settings dialog.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IDeviceSettingsService.ShowProximitySettingsAsync">
            <summary>
            Shows the NFC settings dialog.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IDeviceSettingsService.ShowScreenRotationSettingsAsync">
            <summary>
            Shows the Screen Rotation settings dialog.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IDeviceSettingsService.ShowWiFiSettingsAsync">
            <summary>
            Shows the Wi-Fi settings dialog.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IDeviceSettingsService.ShowWorkplaceSettingsAsync">
            <summary>
            Shows the Workplace settings dialog.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IDisplayPropertiesService">
            <summary>
            Represents a service capable of launching a Settings dialog that allows the user to change the device's settings.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDisplayPropertiesService.LogicalDpi">
            <summary>
            Gets the pixels per logical inch of the current environment.
            </summary>
            <value>The pixels per logical inch of the current environment.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDisplayPropertiesService.RawDpiX">
            <summary>
            Gets the raw dots per inch (DPI) along the x axis of the display monitor.
            </summary>
            <value>The raw dots per inch (DPI) along the x axis of the display monitor.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDisplayPropertiesService.RawDpiY">
            <summary>
            Gets the raw dots per inch (DPI) along the y axis of the display monitor.
            </summary>
            <value>The raw dots per inch (DPI) along the y axis of the display monitor.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDisplayPropertiesService.Bounds">
            <summary>
            Gets the height and width of the application window, as a Rect value.
            </summary>
            <value>A value that reports the height and width of the application window.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDisplayPropertiesService.PhysicalBounds">
            <summary>
            Gets the height and width of the physical screen, as a Rect value.
            </summary>
            <value>A value that reports the height and width of the physical screen window.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDisplayPropertiesService.ScreenDiagonal">
            <summary>
            Gets the physical screen diagonal size.
            </summary>
            <value>The physical screen diagonal size.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IDisplayPropertiesService.RawPixelsPerViewPixel">
            <summary>
            Gets the number of raw (physical) pixels for each view (layout) pixel.
            </summary>
            <value>The number of raw (physical) pixels for each view (layout) pixel.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IEmailComposeService">
            <summary>
            Represents a service capable of sending e-mail messages.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IEmailComposeService.ShowAsync(System.String,System.String)">
            <summary>
            Shows the e-mail compose screen with the specified subject and message body.
            </summary>
            <param name="subject">The e-mail subject.</param>
            <param name="body">The e-mail message body.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IEmailComposeService.ShowAsync(System.String,System.String,System.String)">
            <summary>
            Shows the e-mail compose screen with the specified recipients, subject and message body.
            </summary>
            <param name="to">The e-mail recipients.</param>
            <param name="subject">The e-mail subject.</param>
            <param name="body">The e-mail message body.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IEmailComposeService.ShowAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Shows the e-mail compose screen with the specified recipients, CC recipients, BCC recipients, subject and message body.
            </summary>
            <param name="to">The e-mail recipients.</param>
            <param name="cc">The e-mail CC recipients.</param>
            <param name="bcc">The e-mail BCC recipients.</param>
            <param name="subject">The e-mail subject.</param>
            <param name="body">The e-mail message body.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.ILauncherService">
            <summary>
            Represents a service capable of starting the default app associated with the specified file or <see cref="T:System.Uri"/>.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ILauncherService.LaunchUriAsync(System.Uri)">
            <summary>
            Starts the default app associated with the URI scheme name for the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to start.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ILauncherService.LaunchUriAsync(System.String)">
            <summary>
            Starts the default app associated with the URI scheme name for the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="url">The URI to start.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ILauncherService.LaunchFileAsync(System.String)">
            <summary>
            Starts the default app associated with the specified file.
            </summary>
            <param name="file">The file to start.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.ILocationService">
            <summary>
            Represents a service capable of handling the device location capabilities.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ILocationService.Start">
            <summary>
            Starts the acquisition of data from the location service.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ILocationService.Start(Cimbalino.Toolkit.Services.LocationServiceAccuracy)">
            <summary>
            Starts the acquisition of data from the location service.
            </summary>
            <param name="desiredAccuracy">The desired accuracy.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ILocationService.Start(System.Int32)">
            <summary>
            Starts the acquisition of data from the location service.
            </summary>
            <param name="desiredAccuracyInMeters">The desired accuracy in meters for data returned from the location service.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ILocationService.Stop">
            <summary>
            Stops the acquisition of data from the location service.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ILocationService.GetPositionAsync">
            <summary>
            Starts an asynchronous operation to retrieve the current location.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ILocationService.GetPositionAsync(Cimbalino.Toolkit.Services.LocationServiceAccuracy)">
            <summary>
            Starts an asynchronous operation to retrieve the current location.
            </summary>
            <param name="desiredAccuracy">The desired accuracy.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ILocationService.GetPositionAsync(System.TimeSpan,System.TimeSpan)">
            <summary>
            Starts an asynchronous operation to retrieve the current location.
            </summary>
            <param name="maximumAge">The maximum acceptable age of cached location data.</param>
            <param name="timeout">The timeout.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ILocationService.GetPositionAsync(Cimbalino.Toolkit.Services.LocationServiceAccuracy,System.TimeSpan,System.TimeSpan)">
            <summary>
            Starts an asynchronous operation to retrieve the current location.
            </summary>
            <param name="desiredAccuracy">The desired accuracy.</param>
            <param name="maximumAge">The maximum acceptable age of cached location data.</param>
            <param name="timeout">The timeout.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="E:Cimbalino.Toolkit.Services.ILocationService.PositionChanged">
            <summary>
            Occurs when the location service detects a change in position.
            </summary>
        </member>
        <member name="E:Cimbalino.Toolkit.Services.ILocationService.StatusChanged">
            <summary>
            Occurs when the status of the location service changes.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.ILocationService.DesiredAccuracy">
            <summary>
            Gets the accuracy level at which the location service provides location updates.
            </summary>
            <value>The accuracy level at which the location service provides location updates.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.ILocationService.DesiredAccuracyInMeters">
            <summary>
            Gets the desired accuracy in meters for data returned from the location service.
            </summary>
            <value>The desired accuracy in meters for data returned from the location service.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.ILocationService.Status">
            <summary>
            Gets the status that indicates the ability of the location service to provide location updates.
            </summary>
            <value>The status that indicates the ability of the location service to provide location updates.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.ILocationService.MovementThreshold">
            <summary>
            Gets or sets the distance of movement, in meters, relative to the coordinate from the last <see cref="E:Cimbalino.Toolkit.Services.ILocationService.PositionChanged"/> event, that is required for the location service to raise a <see cref="E:Cimbalino.Toolkit.Services.ILocationService.PositionChanged"/> event.
            </summary>
            <value>The distance of movement, in meters, relative to the coordinate from the last <see cref="E:Cimbalino.Toolkit.Services.ILocationService.PositionChanged"/> event, that is required for the location service to raise a <see cref="E:Cimbalino.Toolkit.Services.ILocationService.PositionChanged"/> event.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.ILocationService.ReportInterval">
            <summary>
            Gets or sets the requested minimum time interval between location updates, in milliseconds. If your application requires updates infrequently, set this value so that the location provider can conserve power by calculating location only when needed.
            </summary>
            <value>The requested minimum time interval between location updates, in milliseconds.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IMessageBoxService">
            <summary>
            Represents a service capable of showing message boxes.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IMessageBoxService.ShowAsync(System.String)">
            <summary>
            Displays a message box that contains the specified text and an OK button.
            </summary>
            <param name="text">The message to display.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IMessageBoxService.ShowAsync(System.String,System.String)">
            <summary>
            Displays a message box that contains the specified text, title bar caption, and an OK button.
            </summary>
            <param name="text">The message to display.</param>
            <param name="caption">The title of the message box.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IMessageBoxService.ShowAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Displays a message box that contains the specified text, title bar caption, and response buttons.
            </summary>
            <param name="text">The message to display.</param>
            <param name="caption">The title of the message box.</param>
            <param name="buttons">The captions for message box buttons. The maximum number of buttons is two.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.INavigationService">
            <summary>
            Represents a service capable of handling the application navigation.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.INavigationService.Navigate(System.String)">
            <summary>
            Navigates to the content specified by the uniform resource identifier (URI).
            </summary>
            <param name="source">The URI for the desired content.</param>
            <returns>true if navigation is not canceled; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.INavigationService.Navigate(System.Uri)">
            <summary>
            Navigates to the content specified by the uniform resource identifier (URI).
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> initialized with the URI for the desired content.</param>
            <returns>true if navigation is not canceled; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.INavigationService.Navigate``1">
            <summary>
            Navigates to the content specified by the type reference.
            </summary>
            <typeparam name="T">The page to navigate to, specified as a type reference to its partial class type.</typeparam>
            <returns>true if navigation is not canceled; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.INavigationService.Navigate``1(System.Object)">
            <summary>
            Navigates to the content specified by the type reference.
            </summary>
            <typeparam name="T">The page to navigate to, specified as a type reference to its partial class type.</typeparam>
            <param name="parameter">The navigation parameter to pass to the target page; must have a basic type (string, char, numeric, or GUID).</param>
            <returns>true if navigation is not canceled; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.INavigationService.Navigate(System.Type)">
            <summary>
            Navigates to the content specified by the type reference.
            </summary>
            <param name="type">The page to navigate to, specified as a type reference to its partial class type.</param>
            <returns>true if navigation is not canceled; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.INavigationService.Navigate(System.Type,System.Object)">
            <summary>
            Navigates to the content specified by the type reference.
            </summary>
            <param name="type">The page to navigate to, specified as a type reference to its partial class type.</param>
            <param name="parameter">The navigation parameter to pass to the target page; must have a basic type (string, char, numeric, or GUID).</param>
            <returns>true if navigation is not canceled; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.INavigationService.GoBack">
            <summary>
            Navigates to the most recent item in back navigation history.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.INavigationService.GoForward">
            <summary>
            Navigates to the most recent item in forward navigation history.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.INavigationService.RemoveBackEntry">
            <summary>
            Removes the most recent available entry from the back stack.
            </summary>
            <returns>true if successfully removed the most recent available entry from the back stack; otherwise, false.</returns>
        </member>
        <member name="E:Cimbalino.Toolkit.Services.INavigationService.Navigated">
            <summary>
            Occurs when the content that is being navigated to has been found and is available, although it may not have completed loading.
            </summary>
        </member>
        <member name="E:Cimbalino.Toolkit.Services.INavigationService.BackKeyPressed">
            <summary>
            Occurs when the user presses the hardware Back button.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.INavigationService.CurrentSource">
            <summary>
            Gets the uniform resource identifier (URI) of the content that is currently displayed.
            </summary>
            <value>Returns a value that represents the <see cref="T:System.Uri"/> of content that is currently displayed.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.INavigationService.QueryString">
            <summary>
            Gets a collection of query string values.
            </summary>
            <value>Returns a <see cref="T:System.Collections.Generic.IDictionary`2"/> collection that contains the query string values.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.INavigationService.CurrentParameter">
            <summary>
            Gets any parameter object passed to the target page for the navigation.
            </summary>
            <value>Any parameter object passed to the target page for the navigation.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.INavigationService.CanGoBack">
            <summary>
            Gets a value indicating whether there is at least one entry in back navigation history.
            </summary>
            <value>true if there is at least one entry in back navigation history; false if there are no entries in back navigation history.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.INavigationService.CanGoForward">
            <summary>
            Gets a value indicating whether there is at least one entry in forward navigation history.
            </summary>
            <value>true if there is at least one entry in forward navigation history; false if there are no entries in forward navigation history.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IPhoneCallService">
            <summary>
            Represents a service capable of launching the Phone application.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IPhoneCallService.ShowAsync(System.String)">
            <summary>
            Shows the Phone application, using the specified phone number.
            </summary>
            <param name="phoneNumber">The phone number.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IPhoneCallService.ShowAsync(System.String,System.String)">
            <summary>
            Shows the Phone application, using the specified phone number and display name.
            </summary>
            <param name="phoneNumber">The phone number.</param>
            <param name="displayName">The display name.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.ISmsComposeService">
            <summary>
            Represents a service capable of launching the Messaging application with a new SMS message displayed.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ISmsComposeService.ShowAsync(System.String)">
            <summary>
            Shows the Messaging application, using the specified recipient list.
            </summary>
            <param name="recipient">The recipient.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ISmsComposeService.ShowAsync(System.String,System.String)">
            <summary>
            Shows the Messaging application, using the specified recipient list and message body.
            </summary>
            <param name="recipient">The recipient list for the new SMS message.</param>
            <param name="body">The body text of the new SMS message.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IStorageService">
            <summary>
            Represents a service capable of handling the application storage asynchronously.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IStorageService.Local">
            <summary>
            Gets the storage handler instance for the root folder in the local app data store.
            </summary>
            <value>The storage handler instance for the root folder in the local app data store.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IStorageService.Roaming">
            <summary>
            Gets the storage handler instance for the root folder in the roaming app data store.
            </summary>
            <value>The storage handler instance for the root folder in the roaming app data store.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IStorageService.Temporary">
            <summary>
            Gets the storage handler instance for the root folder in the temporary app data store.
            </summary>
            <value>The storage handler instance for the root folder in the temporary app data store.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IStorageService.LocalCache">
            <summary>
            Gets the storage handler instance for the root folder in the local app data store where you can save files that are not included in backup and restore.
            </summary>
            <value>The storage handler instance for the root folder in the local app data store where you can save files that are not included in backup and restore.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.IStorageService.Package">
            <summary>
            Gets the storage handler instance for the root folder in the package installation data store.
            </summary>
            <value>The storage handler instance for the root folder in the package installation data store.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.IStoreService">
            <summary>
            Represents a service capable of launching the Store application.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStoreService.ShowAsync">
            <summary>
            Shows the Store application.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStoreService.ShowPublisherAsync(System.String)">
            <summary>
            Shows the Store application.
            </summary>
            <param name="publisherName">The publisher display name.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStoreService.SearchAsync(System.String)">
            <summary>
            Shows the Store application, optionally filtering results by keyword, publisher, and content type.
            </summary>
            <param name="keywords">The keywords to search for.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.IStoreService.ReviewAsync(System.String)">
            <summary>
            Shows the Store application.
            </summary>
            <param name="applicationId">The application id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.LocationServiceAccuracy">
            <summary>
            Indicates the requested accuracy level for the location data that the application uses.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.LocationServiceAccuracy.Default">
            <summary>
            Optimize for power, performance, and other cost considerations.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.LocationServiceAccuracy.High">
            <summary>
            Deliver the most accurate report possible. This includes using services that might charge money, or consuming higher levels of battery power or connection bandwidth. An accuracy level of High may degrade system performance and should be used only when necessary.
            </summary>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.LocationServicePosition">
            <summary>
            Represents a location expressed as a geographic coordinate.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.LocationServicePosition.Unknown">
            <summary>
            Represents a <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> object with unknown latitude and longitude fields.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationServicePosition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> class.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationServicePosition.#ctor(System.DateTimeOffset,System.Double,System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> class.
            </summary>
            <param name="timestamp">The time at which the location was determined.</param>
            <param name="latitude">The latitude in degrees.</param>
            <param name="longitude">The longitude in degrees.</param>
            <param name="accuracy">The accuracy of the location in meters.</param>
            <param name="altitude">The altitude of the location, in meters.</param>
            <param name="altitudeAccuracy">The accuracy of the altitude, in meters.</param>
            <param name="heading">The current heading in degrees relative to true north.</param>
            <param name="speed">The speed in meters per second.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationServicePosition.ToString">
            <summary>
            Returns a string representation of the current <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/>.
            </summary>
            <returns>A string representation of the current <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/>.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationServicePosition.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for the current <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/>.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationServicePosition.Equals(System.Object)">
            <summary>
            Determines whether the specified object is a <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> that has the same latitude and longitude values as this one.
            </summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>true if the latitude and longitude properties of both objects have the same value.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationServicePosition.Equals(Cimbalino.Toolkit.Services.LocationServicePosition)">
            <summary>
            Determines whether the specified <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> has the same latitude and longitude values as this one.
            </summary>
            <param name="other">The <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> object to compare with the current instance.</param>
            <returns>true if the latitude and longitude properties of both objects have the same value; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationServicePosition.GetDistanceTo(Cimbalino.Toolkit.Services.LocationServicePosition)">
            <summary>
            Returns the distance between the latitude and longitude coordinates that are specified by this <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> and another specified <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/>.
            </summary>
            <param name="other">The <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> for the location to calculate the distance to.</param>
            <returns>The distance between the two coordinates, in meters.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationServicePosition.op_Inequality(Cimbalino.Toolkit.Services.LocationServicePosition,Cimbalino.Toolkit.Services.LocationServicePosition)">
            <summary>
            Determines whether two <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> objects are not equal.
            </summary>
            <param name="left">The first <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> to test for inequality.</param>
            <param name="right">The second <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> to test for inequality.</param>
            <returns>true if the latitude and longitude values of both <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> objects are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationServicePosition.op_Equality(Cimbalino.Toolkit.Services.LocationServicePosition,Cimbalino.Toolkit.Services.LocationServicePosition)">
            <summary>
            Determines whether two <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> objects are equal.
            </summary>
            <param name="left">The first <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> to test for equality.</param>
            <param name="right">The second <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> to test for equality.</param>
            <returns>true if the latitude and longitude values of both <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> objects are equal; otherwise, false.</returns>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationServicePosition.Timestamp">
            <summary>
            Gets the time at which the location was determined.
            </summary>
            <value>The time at which the location was determined.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationServicePosition.Latitude">
            <summary>
            Gets the latitude in degrees.
            </summary>
            <value>The latitude in degrees.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationServicePosition.Longitude">
            <summary>
            Gets the longitude in degrees.
            </summary>
            <value>The longitude in degrees.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationServicePosition.Accuracy">
            <summary>
            Gets the accuracy of the location in meters.
            </summary>
            <value>The accuracy of the location in meters.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationServicePosition.Altitude">
            <summary>
            Gets the altitude of the location, in meters.
            </summary>
            <value>The altitude of the location, in meters.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationServicePosition.AltitudeAccuracy">
            <summary>
            Gets the accuracy of the altitude, in meters.
            </summary>
            <value>The accuracy of the altitude, in meters.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationServicePosition.Heading">
            <summary>
            Gets the current heading in degrees relative to true north.
            </summary>
            <value>The current heading in degrees relative to true north.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationServicePosition.Speed">
            <summary>
            Gets the speed in meters per second.
            </summary>
            <value>The speed in meters per second.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationServicePosition.IsUnknown">
            <summary>
            Gets a value indicating whether the <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> does not contain latitude or longitude data.
            </summary>
            <value>true if the <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> does not contain latitude or longitude data; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.LocationServicePositionChangedEventArgs">
            <summary>
            Provides data for <see cref="E:Cimbalino.Toolkit.Services.ILocationService.PositionChanged"/> events.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationServicePositionChangedEventArgs.#ctor(Cimbalino.Toolkit.Services.LocationServicePosition)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Services.LocationServicePositionChangedEventArgs"/> class.
            </summary>
            <param name="position">A <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> object containing the location and time stamp data for the event.</param>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationServicePositionChangedEventArgs.Position">
            <summary>
            Gets the <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/> object containing the location and time stamp data for the <see cref="E:Cimbalino.Toolkit.Services.ILocationService.PositionChanged"/> event.
            </summary>
            <value>The <see cref="T:Cimbalino.Toolkit.Services.LocationServicePosition"/>.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.LocationServiceStatus">
            <summary>
            Indicates the ability of the <see cref="T:Cimbalino.Toolkit.Services.ILocationService"/> to provide location data.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.LocationServiceStatus.Ready">
            <summary>
            Location data is available.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.LocationServiceStatus.Initializing">
            <summary>
            The location provider is initializing. This is the status if a GPS is the source of location data and the GPS receiver does not yet have the required number of satellites in view to obtain an accurate position.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.LocationServiceStatus.NoData">
            <summary>
            No location data is available from any location provider.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.LocationServiceStatus.Disabled">
            <summary>
            The location provider is disabled. This status indicates that the user has not granted the application permission to access location.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.LocationServiceStatus.NotInitialized">
            <summary>
            An operation to retrieve location has not yet been initialized.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.LocationServiceStatus.NotAvailable">
            <summary>
            The Windows Sensor and Location Platform is not available on this version of Windows.
            </summary>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.LocationServiceStatusChangedEventArgs">
            <summary>
            Provides information for the <see cref="E:Cimbalino.Toolkit.Services.ILocationService.StatusChanged"/> event.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationServiceStatusChangedEventArgs.#ctor(Cimbalino.Toolkit.Services.LocationServiceStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Services.LocationServiceStatusChangedEventArgs"/> class.
            </summary>
            <param name="status">The updated status of the <see cref="T:Cimbalino.Toolkit.Services.ILocationService"/> object.</param>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationServiceStatusChangedEventArgs.Status">
            <summary>
            Gets the updated status of the <see cref="T:Cimbalino.Toolkit.Services.ILocationService"/> object.
            </summary>
            <value>The updated status of the <see cref="T:Cimbalino.Toolkit.Services.ILocationService"/> object.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.DependencyObjectExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Windows.DependencyObject"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.DependencyObjectExtensions.GetVisualParent(System.Windows.DependencyObject)">
            <summary>
            Returns an object's parent object in the visual tree.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The parent object of the <paramref name="dependencyObject"/> object in the visual tree.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.DependencyObjectExtensions.GetVisualAncestor``1(System.Windows.DependencyObject)">
            <summary>
            Returns the ancestor object of the <paramref name="dependencyObject"/> object in the visual tree with the specified type.
            </summary>
            <typeparam name="T">The type of the visual ancestor.</typeparam>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The ancestor object of the <paramref name="dependencyObject"/> object in the visual tree with the specified type.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.DependencyObjectExtensions.GetVisualChilds(System.Windows.DependencyObject)">
            <summary>
            Retrieves all the visual children of a dependency object.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The visual children of the dependency object.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.DependencyObjectExtensions.GetVisualChilds``1(System.Windows.DependencyObject)">
            <summary>
            Retrieves all the visual children of a dependency object with the specified type.
            </summary>
            <typeparam name="T">The type of the visual children.</typeparam>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The visual children of the dependency object with the specified type.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.DependencyObjectExtensions.GetVisualDescendents(System.Windows.DependencyObject)">
            <summary>
            Retrieves all the visual descendants of a dependency object.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The visual descendants of the dependency object.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.DependencyObjectExtensions.GetVisualDescendents``1(System.Windows.DependencyObject)">
            <summary>
            Retrieves all the visual descendants of a dependency object with the specified type.
            </summary>
            <typeparam name="T">The type of the visual descendants.</typeparam>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The visual descendants of the dependency object with the specified type.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Extensions.WriteableBitmapExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Windows.Media.Imaging.WriteableBitmap"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.WriteableBitmapExtensions.SavePngAsync(System.Windows.Media.Imaging.WriteableBitmap,System.IO.Stream)">
            <summary>
            Encodes a WriteableBitmap object into a PNG stream.
            </summary>
            <param name="writeableBitmap">The writeable bitmap.</param>
            <param name="outputStream">The image data stream.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Extensions.WriteableBitmapExtensions.SaveJpegAsync(System.Windows.Media.Imaging.WriteableBitmap,System.IO.Stream,System.Int32)">
            <summary>
            Encodes a WriteableBitmap object into a JPEG stream, with parameters for setting the target quality of the JPEG file.
            </summary>
            <param name="writeableBitmap">The WriteableBitmap object.</param>
            <param name="outputStream">The image data stream.</param>
            <param name="quality">This parameter represents the quality of the JPEG photo with a range between 0 and 100, with 100 being the best photo quality. We recommend that you do not fall lower than a value of 70. because JPEG picture quality diminishes significantly below that level. </param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.ApplicationManifestService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Toolkit.Services.IApplicationManifestService"/>.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ApplicationManifestService.GetApplicationManifest">
            <summary>
            Gets the application manifest for the active app.
            </summary>
            <returns>The application manifest for the active app.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.ApplicationProfileService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Toolkit.Services.IApplicationProfileService"/>.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.ApplicationProfileService.Mode">
            <summary>
            Gets a value that indicates the mode that an app is running in.
            </summary>
            <value>A value that indicates the mode that an app is running in.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.DeviceStatusService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Toolkit.Services.IDeviceStatusService"/>.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.DeviceStatusService.ApplicationCurrentMemoryUsage">
            <summary>
            Gets the memory usage of the current application in bytes.
            </summary>
            <value>The memory usage of the current application in bytes.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.DeviceStatusService.ApplicationMemoryUsageLimit">
            <summary>
            Gets the maximum amount of memory that your application process can allocate.
            </summary>
            <value>The maximum amount of memory that your application process can allocate.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.DeviceStatusService.ApplicationPeakMemoryUsage">
            <summary>
            Gets the peak memory usage of the current application in bytes.
            </summary>
            <value>The peak memory usage of the current application in bytes.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.DeviceStatusService.DeviceFirmwareVersion">
            <summary>
            Gets the firmware version running on the device.
            </summary>
            <value>The firmware version running on the device.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.DeviceStatusService.DeviceHardwareVersion">
            <summary>
            Gets the hardware version running on the device.
            </summary>
            <value>The hardware version running on the device.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.DeviceStatusService.DeviceManufacturer">
            <summary>
            Gets the device manufacturer name.
            </summary>
            <value>The device manufacturer name.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.DeviceStatusService.DeviceName">
            <summary>
            Gets the device name.
            </summary>
            <value>The device name.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.DeviceStatusService.DeviceTotalMemory">
            <summary>
            Gets the physical RAM size of the device in bytes.
            </summary>
            <value>The physical RAM size of the device in bytes.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.DeviceStatusService.IsLowMemoryDevice">
            <summary>
            Gets a value indicating whether the device is a low memory device (less than 256 MB of memory installed).
            </summary>
            <value>true if the device is a low memory device (less than 256 MB of memory installed); otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.DeviceStatusService.IsKeyboardDeployed">
            <summary>
            Gets a value indicating whether the user has deployed the physical hardware keyboard of the device.
            </summary>
            <value>true if the keyboard is deployed; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.DeviceStatusService.IsKeyboardPresent">
            <summary>
            Gets a value indicating whether the device contains a physical hardware keyboard.
            </summary>
            <value>true if the device contains a physical hardware keyboard; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.DeviceStatusService.PowerSource">
            <summary>
            Gets the a value indicating whether the device is currently running on battery power or is plugged in to an external power supply.
            </summary>
            <value>true if the device is currently running on battery power or is plugged in to an external power supply; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.LegacyApplicationSettingsServiceHandler">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Toolkit.Services.IApplicationSettingsServiceHandler"/>.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.LegacyApplicationSettingsServiceHandler.ApplicationSettings">
            <summary>
            The instance of <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> that contains the contents of the application's <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/>, scoped at the application level, or creates a new instance of <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> if one does not exist.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LegacyApplicationSettingsServiceHandler.Contains(System.String)">
            <summary>
            Determines if the application settings contains the specified key.
            </summary>
            <param name="key">The key for the entry to be located.</param>
            <returns>true if the settings contains the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LegacyApplicationSettingsServiceHandler.Get``1(System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <returns>The value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter.</returns>
            <typeparam name="T">The type of value to get.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LegacyApplicationSettingsServiceHandler.Get``1(System.String,``0)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="defaultValue">The default value to return if the key does not exist.</param>
            <returns>The value associated with the specified key, if the key is found; otherwise, the specified default value.</returns>
            <typeparam name="T">The type of value to get.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LegacyApplicationSettingsServiceHandler.Set``1(System.String,``0)">
            <summary>
            Sets the value for the specified key. If the entry does not exist, a new one will be added.
            </summary>
            <param name="key">The key whose value to set.</param>
            <param name="value">The value for the specified key.</param>
            <typeparam name="T">The type of value to set.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LegacyApplicationSettingsServiceHandler.Remove(System.String)">
            <summary>
            Removes the specified key and associated value.
            </summary>
            <param name="key">The key whose value to clear.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LegacyApplicationSettingsServiceHandler.GetValuesAsync">
            <summary>
            Gets an object that represents all the settings in this <see cref="T:Cimbalino.Toolkit.Services.IApplicationSettingsServiceHandler"/> instance.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.LocationService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Toolkit.Services.ILocationService"/>.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Services.LocationService"/> class.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationService.Start">
            <summary>
            Starts the acquisition of data from the location service.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationService.Start(Cimbalino.Toolkit.Services.LocationServiceAccuracy)">
            <summary>
            Starts the acquisition of data from the location service.
            </summary>
            <param name="desiredAccuracy">The desired accuracy.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationService.Start(System.Int32)">
            <summary>
            Starts the acquisition of data from the location service.
            </summary>
            <param name="desiredAccuracyInMeters">The desired accuracy in meters for data returned from the location service.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationService.Stop">
            <summary>
            Stops the acquisition of data from the location service.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationService.GetPositionAsync">
            <summary>
            Starts an asynchronous operation to retrieve the current location.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationService.GetPositionAsync(Cimbalino.Toolkit.Services.LocationServiceAccuracy)">
            <summary>
            Starts an asynchronous operation to retrieve the current location.
            </summary>
            <param name="desiredAccuracy">The desired accuracy.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationService.GetPositionAsync(System.TimeSpan,System.TimeSpan)">
            <summary>
            Starts an asynchronous operation to retrieve the current location.
            </summary>
            <param name="maximumAge">The maximum acceptable age of cached location data.</param>
            <param name="timeout">The timeout.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationService.GetPositionAsync(Cimbalino.Toolkit.Services.LocationServiceAccuracy,System.TimeSpan,System.TimeSpan)">
            <summary>
            Starts an asynchronous operation to retrieve the current location.
            </summary>
            <param name="desiredAccuracy">The desired accuracy.</param>
            <param name="maximumAge">The maximum acceptable age of cached location data.</param>
            <param name="timeout">The timeout.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationService.RaisePositionChanged(Cimbalino.Toolkit.Services.LocationServicePositionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Cimbalino.Toolkit.Services.LocationService.PositionChanged"/> event with the provided event data.
            </summary>
            <param name="eventArgs">The event data.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.LocationService.RaiseStatusChanged(Cimbalino.Toolkit.Services.LocationServiceStatusChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Cimbalino.Toolkit.Services.LocationService.StatusChanged"/> event with the provided event data.
            </summary>
            <param name="eventArgs">The event data.</param>
        </member>
        <member name="E:Cimbalino.Toolkit.Services.LocationService.PositionChanged">
            <summary>
            Occurs when the location service detects a change in position.
            </summary>
        </member>
        <member name="E:Cimbalino.Toolkit.Services.LocationService.StatusChanged">
            <summary>
            Occurs when the status of the location service changes.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationService.DesiredAccuracy">
            <summary>
            Gets the accuracy level at which the location service provides location updates.
            </summary>
            <value>The accuracy level at which the location service provides location updates.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationService.DesiredAccuracyInMeters">
            <summary>
            Gets the desired accuracy in meters for data returned from the location service.
            </summary>
            <value>The desired accuracy in meters for data returned from the location service.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationService.Status">
            <summary>
            Gets the status that indicates the ability of the location service to provide location updates.
            </summary>
            <value>The status that indicates the ability of the location service to provide location updates.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationService.MovementThreshold">
            <summary>
            Gets or sets the distance of movement, in meters, relative to the coordinate from the last <see cref="E:Cimbalino.Toolkit.Services.ILocationService.PositionChanged"/> event, that is required for the location service to raise a <see cref="E:Cimbalino.Toolkit.Services.ILocationService.PositionChanged"/> event.
            </summary>
            <value>The distance of movement, in meters, relative to the coordinate from the last <see cref="E:Cimbalino.Toolkit.Services.ILocationService.PositionChanged"/> event, that is required for the location service to raise a <see cref="E:Cimbalino.Toolkit.Services.ILocationService.PositionChanged"/> event.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.LocationService.ReportInterval">
            <summary>
            Gets or sets the requested minimum time interval between location updates, in milliseconds. If your application requires updates infrequently, set this value so that the location provider can conserve power by calculating location only when needed.
            </summary>
            <value>The requested minimum time interval between location updates, in milliseconds.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.NetworkInformationService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Toolkit.Services.INetworkInformationService"/>.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.NetworkInformationService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Services.NetworkInformationService"/> class.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.NetworkInformationService.RaiseNetworkStatusChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Cimbalino.Toolkit.Services.NetworkInformationService.NetworkStatusChanged"/> event with the provided event data.
            </summary>
            <param name="eventArgs">The event data.</param>
        </member>
        <member name="E:Cimbalino.Toolkit.Services.NetworkInformationService.NetworkStatusChanged">
            <summary>
            Occurs when the network status changes for a connection.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.NetworkInformationService.IsNetworkAvailable">
            <summary>
            Gets a value indicating whether the network is available.
            </summary>
            <value>true if the network is available; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.ApplicationSettingsService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Toolkit.Services.IApplicationSettingsService"/>.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.ApplicationSettingsService.Local">
            <summary>
            Gets the local settings handler instance for the app.
            </summary>
            <value>The local settings handler instance for the app.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.ApplicationSettingsService.Roaming">
            <summary>
            Gets the roaming settings handler instance for the app.
            </summary>
            <value>The roaming settings handler instance for the app.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.ApplicationSettingsService.Legacy">
            <summary>
            Gets the legacy settings handler instance for the app.
            </summary>
            <value>The legacy settings handler instance for the app.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.ApplicationSettingsServiceHandler">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Toolkit.Services.IApplicationSettingsServiceHandler"/>.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.ApplicationSettingsServiceHandler.ApplicationDataContainer">
            <summary>
            The root <see cref="F:Cimbalino.Toolkit.Services.ApplicationSettingsServiceHandler.ApplicationDataContainer"/> instance.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ApplicationSettingsServiceHandler.#ctor(Windows.Storage.ApplicationDataContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Services.ApplicationSettingsServiceHandler"/> class.
            </summary>
            <param name="applicationDataContainer">The root <see cref="F:Cimbalino.Toolkit.Services.ApplicationSettingsServiceHandler.ApplicationDataContainer"/> instance.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ApplicationSettingsServiceHandler.Contains(System.String)">
            <summary>
            Determines if the application settings contains the specified key.
            </summary>
            <param name="key">The key for the entry to be located.</param>
            <returns>true if the settings contains the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ApplicationSettingsServiceHandler.Get``1(System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <returns>The value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter.</returns>
            <typeparam name="T">The type of value to get.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ApplicationSettingsServiceHandler.Get``1(System.String,``0)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="defaultValue">The default value to return if the key does not exist.</param>
            <returns>The value associated with the specified key, if the key is found; otherwise, the specified default value.</returns>
            <typeparam name="T">The type of value to get.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ApplicationSettingsServiceHandler.Set``1(System.String,``0)">
            <summary>
            Sets the value for the specified key. If the entry does not exist, a new one will be added.
            </summary>
            <param name="key">The key whose value to set.</param>
            <param name="value">The value for the specified key.</param>
            <typeparam name="T">The type of value to set.</typeparam>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ApplicationSettingsServiceHandler.Remove(System.String)">
            <summary>
            Removes the specified key and associated value.
            </summary>
            <param name="key">The key whose value to clear.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.ApplicationSettingsServiceHandler.GetValuesAsync">
            <summary>
            Gets an object that represents all the settings in this <see cref="T:Cimbalino.Toolkit.Services.IApplicationSettingsServiceHandler"/> instance.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.RuntimeInformationService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Toolkit.Services.IRuntimeInformationService"/>.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.RuntimeInformationService.Profile">
            <summary>
            Gets the device runtime profile.
            </summary>
            <value>The device runtime profile.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.RuntimeInformationService.Version">
            <summary>
            Gets the device runtime version.
            </summary>
            <value>The device runtime version.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.StorageService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Toolkit.Services.IStorageService"/>.
            </summary>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.StorageService.Local">
            <summary>
            Gets the storage handler instance for the root folder in the local app data store.
            </summary>
            <value>The storage handler instance for the root folder in the local app data store.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.StorageService.Roaming">
            <summary>
            Gets the storage handler instance for the root folder in the roaming app data store.
            </summary>
            <value>The storage handler instance for the root folder in the roaming app data store.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.StorageService.Temporary">
            <summary>
            Gets the storage handler instance for the root folder in the temporary app data store.
            </summary>
            <value>The storage handler instance for the root folder in the temporary app data store.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.StorageService.LocalCache">
            <summary>
            Gets the storage handler instance for the root folder in the local app data store where you can save files that are not included in backup and restore.
            </summary>
            <value>The storage handler instance for the root folder in the local app data store where you can save files that are not included in backup and restore.</value>
        </member>
        <member name="P:Cimbalino.Toolkit.Services.StorageService.Package">
            <summary>
            Gets the storage handler instance for the root folder in the package installation data store.
            </summary>
            <value>The storage handler instance for the root folder in the package installation data store.</value>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.StorageServiceHandler">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Toolkit.Services.IStorageServiceHandler"/>.
            </summary>
        </member>
        <member name="F:Cimbalino.Toolkit.Services.StorageServiceHandler.StorageFolder">
            <summary>
            The root <see cref="F:Cimbalino.Toolkit.Services.StorageServiceHandler.StorageFolder"/> instance.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.#ctor(Windows.Storage.StorageFolder)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Toolkit.Services.StorageServiceHandler"/> class.
            </summary>
            <param name="storageFolder">The root <see cref="F:Cimbalino.Toolkit.Services.StorageServiceHandler.StorageFolder"/> instance.</param>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.CopyFileAsync(System.String,System.String)">
            <summary>
            Copies an existing file to a new file.
            </summary>
            <param name="sourceFileName">The name of the file to copy.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory or an existing file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.CopyFileAsync(System.String,System.String,System.Boolean)">
            <summary>
            Copies an existing file to a new file, and optionally overwrites an existing file.
            </summary>
            <param name="sourceFileName">The name of the file to copy.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory.</param>
            <param name="overwrite">true if the destination file can be overwritten; otherwise, false.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.MoveFileAsync(System.String,System.String)">
            <summary>
            Moves an existing file to a new file.
            </summary>
            <param name="sourceFileName">The name of the file to move.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory or an existing file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.MoveFileAsync(System.String,System.String,System.Boolean)">
            <summary>
            Moves an existing file to a new file, and optionally overwrites an existing file.
            </summary>
            <param name="sourceFileName">The name of the file to move.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory.</param>
            <param name="overwrite">true if the destination file can be overwritten; otherwise, false.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.CreateDirectoryAsync(System.String)">
            <summary>
            Creates a directory in the storage scope.
            </summary>
            <param name="dir">The relative path of the directory to create within the storage.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.CreateFileAsync(System.String)">
            <summary>
            Creates a file in the store.
            </summary>
            <param name="path">The relative path of the file to be created in the store.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.DeleteDirectoryAsync(System.String)">
            <summary>
            Deletes a directory in the storage scope.
            </summary>
            <param name="dir">The relative path of the directory to delete within the storage scope.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.DeleteFileAsync(System.String)">
            <summary>
            Deletes the specified file.
            </summary>
            <param name="path">The name of the file to be deleted. Wildcard characters are not supported.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.DirectoryExistsAsync(System.String)">
            <summary>
            Determines whether the specified path refers to an existing directory in the store.
            </summary>
            <param name="dir">The path to test.</param>
            <returns>true if path refers to an existing directory in the store and is not null; otherwise, false.</returns>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.FileExistsAsync(System.String)">
            <summary>
            Determines whether the specified path refers to an existing file in the store.
            </summary>
            <param name="path">The path and file name to test.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.GetDirectoryNamesAsync">
            <summary>
            Enumerates the directories in the root of a store.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.GetDirectoryNamesAsync(System.String)">
            <summary>
            Enumerates directories in a storage scope that match a given pattern.
            </summary>
            <param name="searchPattern">A search pattern. Both single-character ("?") and multi-character ("*") wildcards are supported.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.GetFileNamesAsync">
            <summary>
            Obtains the names of files in the root of a store.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.GetFileNamesAsync(System.String)">
            <summary>
            Enumerates files in storage scope that match a given pattern.
            </summary>
            <param name="searchPattern">A search pattern. Both single-character ("?") and multi-character ("*") wildcards are supported.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.OpenFileForReadAsync(System.String)">
            <summary>
            Opens a file in the specified mode.
            </summary>
            <param name="path">The relative path of the file within the store.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.ReadAllTextAsync(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.ReadAllTextAsync(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.ReadAllLinesAsync(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.ReadAllLinesAsync(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.ReadAllBytesAsync(System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file. Returns null, if an exception is raised.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.WriteAllTextAsync(System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.WriteAllTextAsync(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <param name="encoding">The encoding to apply to the string.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new file, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.WriteAllBytesAsync(System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="bytes">The bytes to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.AppendAllText(System.String,System.String)">
            <summary>
            Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Appends the specified string to the file, creating the file if it does not already exist.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends lines to a file, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.StorageServiceHandler.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Appends lines to a file by using a specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Toolkit.Services.WindowsPhoneStoreService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Toolkit.Services.IWindowsPhoneStoreService"/>.
            </summary>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.WindowsPhoneStoreService.GetAppInformationAsync">
            <summary>
            Retrieves store information about the running application.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Toolkit.Services.WindowsPhoneStoreService.GetAppInformationAsync(System.String)">
            <summary>
            Retrieves store information about the running application.
            </summary>
            <param name="productId">The application Product ID.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:System.Security.Cryptography.HMACMD5">
            <summary>
            Computes a Hash-based Message Authentication Code (HMAC) using the <see cref="T:xBrainLab.Security.Cryptography.MD5" /> hash function
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACMD5"/> class the supplied key.
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.ComputeHash(System.String)">
            <summary>
            Computes the hash value for the specified string (UTF8 default encoding).
            </summary>
            <param name="buffer">The input to compute the hash code for. </param>
            <returns>The computed hash code</returns>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.ComputeHash(System.String,System.Text.Encoding)">
            <summary>
            Computes the hash value for the specified string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <param name="encoding">The encoding.</param>
            <returns>
            The computed hash code
            </returns>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.ComputeHash(System.Byte[])">
            <summary>
            Computes the hash value for the specified byte array.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>
            The computed hash code
            </returns>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.ComputeHashToBase64String(System.String)">
            <summary>
            Computes the hash for the specified string (UTF8 default encoding) to base64 string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>The computed hash code in base64 string</returns>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.ComputeHashToBase64String(System.String,System.Text.Encoding)">
            <summary>
            Computes the hash for the specified string to base64 string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <param name="encoding">The encoding.</param>
            <returns>
            The computed hash code in base64 string
            </returns>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.InitializeKey(System.Byte[])">
            <summary>
            Initializes the key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.UpdateIOPadBuffers">
            <summary>
            Updates the IO pad buffers.
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.Combine(System.Byte[],System.Byte[])">
            <summary>
            Combines two array (a1 and a2).
            </summary>
            <param name="a1">The Array 1.</param>
            <param name="a2">The Array 2.</param>
            <returns>Combinaison of a1 and a2</returns>
        </member>
        <member name="P:System.Security.Cryptography.HMACMD5.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
    </members>
</doc>
